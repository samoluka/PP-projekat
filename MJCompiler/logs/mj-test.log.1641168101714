INFO  01:01:18,392 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  01:01:18,399 - #1 program
INFO  01:01:18,400 - #20 Program
INFO  01:01:18,400 - #5 class
INFO  01:01:18,400 - #20 A
INFO  01:01:18,400 - #43 {
INFO  01:01:18,400 - #20 int
INFO  01:01:18,400 - #20 x
INFO  01:01:18,400 - #45 [
INFO  01:01:18,401 - #46 ]
INFO  01:01:18,401 - #40 ,
INFO  01:01:18,401 - #20 y
INFO  01:01:18,401 - #45 [
INFO  01:01:18,401 - #46 ]
INFO  01:01:18,401 - #39 ;
INFO  01:01:18,401 - #44 }
INFO  01:01:18,401 - #8 const
INFO  01:01:18,402 - #20 int
INFO  01:01:18,402 - #20 pi
INFO  01:01:18,402 - #36 =
INFO  01:01:18,402 - #21 3
INFO  01:01:18,402 - #40 ,
INFO  01:01:18,402 - #20 e
INFO  01:01:18,403 - #36 =
INFO  01:01:18,403 - #21 2
INFO  01:01:18,403 - #39 ;
INFO  01:01:18,403 - #5 class
INFO  01:01:18,403 - #20 B
INFO  01:01:18,403 - #14 extends
INFO  01:01:18,403 - #20 A
INFO  01:01:18,403 - #43 {
INFO  01:01:18,404 - #20 int
INFO  01:01:18,404 - #20 i
INFO  01:01:18,404 - #39 ;
INFO  01:01:18,404 - #43 {
INFO  01:01:18,404 - #20 int
INFO  01:01:18,404 - #20 getValue
INFO  01:01:18,404 - #41 (
INFO  01:01:18,404 - #20 int
INFO  01:01:18,404 - #20 a
INFO  01:01:18,404 - #42 )
INFO  01:01:18,405 - #20 int
INFO  01:01:18,405 - #20 b
INFO  01:01:18,405 - #39 ;
INFO  01:01:18,405 - #20 bool
INFO  01:01:18,405 - #20 c
INFO  01:01:18,405 - #39 ;
INFO  01:01:18,405 - #43 {
INFO  01:01:18,405 - #3 return
INFO  01:01:18,405 - #16 this
INFO  01:01:18,406 - #20 i
INFO  01:01:18,406 - #24 +
INFO  01:01:18,406 - #16 this
INFO  01:01:18,406 - #20 x
INFO  01:01:18,406 - #45 [
INFO  01:01:18,406 - #21 0
INFO  01:01:18,407 - #46 ]
INFO  01:01:18,407 - #24 +
INFO  01:01:18,407 - #20 a
INFO  01:01:18,407 - #39 ;
INFO  01:01:18,407 - #44 }
INFO  01:01:18,407 - #50 void
INFO  01:01:18,408 - #20 m
INFO  01:01:18,408 - #41 (
INFO  01:01:18,408 - #42 )
INFO  01:01:18,409 - #43 {
INFO  01:01:18,409 - #44 }
INFO  01:01:18,409 - #44 }
INFO  01:01:18,409 - #44 }
INFO  01:01:18,409 - #5 class
INFO  01:01:18,410 - #20 C
INFO  01:01:18,410 - #14 extends
INFO  01:01:18,410 - #20 B
INFO  01:01:18,410 - #43 {
INFO  01:01:18,410 - #20 A
INFO  01:01:18,411 - #20 theA
INFO  01:01:18,411 - #39 ;
INFO  01:01:18,411 - #20 int
INFO  01:01:18,411 - #20 a
INFO  01:01:18,411 - #39 ;
INFO  01:01:18,412 - #44 }
INFO  01:01:18,412 - #43 {
INFO  01:01:18,412 - #50 void
INFO  01:01:18,412 - #20 main
INFO  01:01:18,412 - #41 (
INFO  01:01:18,413 - #42 )
INFO  01:01:18,413 - #20 A
INFO  01:01:18,413 - #20 a
INFO  01:01:18,413 - #39 ;
INFO  01:01:18,413 - #20 C
INFO  01:01:18,413 - #20 c
INFO  01:01:18,414 - #39 ;
INFO  01:01:18,414 - #20 int
INFO  01:01:18,414 - #20 i
INFO  01:01:18,414 - #39 ;
INFO  01:01:18,414 - #20 int
INFO  01:01:18,414 - #20 x
INFO  01:01:18,415 - #45 [
INFO  01:01:18,415 - #46 ]
INFO  01:01:18,415 - #39 ;
INFO  01:01:18,415 - #20 char
INFO  01:01:18,415 - #20 ch
INFO  01:01:18,415 - #39 ;
INFO  01:01:18,415 - #43 {
INFO  01:01:18,415 - #20 a
INFO  01:01:18,415 - #36 =
INFO  01:01:18,415 - #12 new
INFO  01:01:18,415 - #20 A
INFO  01:01:18,416 - #39 ;
INFO  01:01:18,416 - #20 a
INFO  01:01:18,416 - #20 x
INFO  01:01:18,416 - #36 =
INFO  01:01:18,416 - #12 new
INFO  01:01:18,416 - #20 int
INFO  01:01:18,417 - #45 [
INFO  01:01:18,417 - #21 5
INFO  01:01:18,417 - #46 ]
INFO  01:01:18,417 - #39 ;
INFO  01:01:18,417 - #20 a
INFO  01:01:18,418 - #20 y
INFO  01:01:18,418 - #36 =
INFO  01:01:18,418 - #12 new
INFO  01:01:18,418 - #20 int
INFO  01:01:18,418 - #45 [
INFO  01:01:18,418 - #21 5
INFO  01:01:18,418 - #46 ]
INFO  01:01:18,419 - #39 ;
INFO  01:01:18,419 - #20 c
INFO  01:01:18,419 - #36 =
INFO  01:01:18,419 - #12 new
INFO  01:01:18,419 - #20 C
INFO  01:01:18,419 - #39 ;
INFO  01:01:18,420 - #20 c
INFO  01:01:18,420 - #20 theA
INFO  01:01:18,420 - #36 =
INFO  01:01:18,420 - #20 a
INFO  01:01:18,420 - #39 ;
INFO  01:01:18,420 - #20 c
INFO  01:01:18,420 - #20 x
INFO  01:01:18,421 - #36 =
INFO  01:01:18,421 - #12 new
INFO  01:01:18,421 - #20 int
INFO  01:01:18,421 - #45 [
INFO  01:01:18,421 - #21 5
INFO  01:01:18,421 - #46 ]
INFO  01:01:18,421 - #39 ;
INFO  01:01:18,421 - #20 x
INFO  01:01:18,421 - #36 =
INFO  01:01:18,422 - #12 new
INFO  01:01:18,422 - #20 int
INFO  01:01:18,422 - #45 [
INFO  01:01:18,422 - #21 3
INFO  01:01:18,422 - #46 ]
INFO  01:01:18,422 - #39 ;
INFO  01:01:18,422 - #13 read
INFO  01:01:18,422 - #41 (
INFO  01:01:18,422 - #20 c
INFO  01:01:18,423 - #20 i
INFO  01:01:18,423 - #42 )
INFO  01:01:18,423 - #39 ;
INFO  01:01:18,423 - #20 i
INFO  01:01:18,423 - #36 =
INFO  01:01:18,423 - #21 0
INFO  01:01:18,423 - #39 ;
INFO  01:01:18,423 - #10 do
INFO  01:01:18,423 - #43 {
INFO  01:01:18,424 - #13 read
INFO  01:01:18,424 - #41 (
INFO  01:01:18,424 - #20 c
INFO  01:01:18,424 - #20 x
INFO  01:01:18,424 - #45 [
INFO  01:01:18,424 - #20 i
INFO  01:01:18,424 - #46 ]
INFO  01:01:18,424 - #42 )
INFO  01:01:18,424 - #39 ;
INFO  01:01:18,424 - #13 read
INFO  01:01:18,425 - #41 (
INFO  01:01:18,425 - #20 c
INFO  01:01:18,425 - #20 theA
INFO  01:01:18,425 - #20 x
INFO  01:01:18,425 - #45 [
INFO  01:01:18,425 - #20 i
INFO  01:01:18,425 - #46 ]
INFO  01:01:18,425 - #42 )
INFO  01:01:18,425 - #39 ;
INFO  01:01:18,425 - #20 i
INFO  01:01:18,426 - #28 ++
INFO  01:01:18,426 - #39 ;
INFO  01:01:18,426 - #21 9
INFO  01:01:18,426 - #27 /
INFO  01:01:18,426 - #21 13
INFO  01:01:18,426 - #44 }
INFO  01:01:18,426 - #11 while
INFO  01:01:18,426 - #41 (
INFO  01:01:18,426 - #20 i
INFO  01:01:18,426 - #21 5
INFO  01:01:18,427 - #42 )
INFO  01:01:18,427 - #39 ;
INFO  01:01:18,427 - #2 print
INFO  01:01:18,427 - #41 (
INFO  01:01:18,427 - #20 c
INFO  01:01:18,427 - #20 getValue
INFO  01:01:18,427 - #41 (
INFO  01:01:18,427 - #20 c
INFO  01:01:18,427 - #20 theA
INFO  01:01:18,428 - #20 x
INFO  01:01:18,428 - #45 [
INFO  01:01:18,428 - #21 0
INFO  01:01:18,428 - #46 ]
INFO  01:01:18,428 - #42 )
INFO  01:01:18,428 - #42 )
INFO  01:01:18,428 - #39 ;
INFO  01:01:18,428 - #20 c
INFO  01:01:18,428 - #20 m
INFO  01:01:18,428 - #41 (
INFO  01:01:18,428 - #42 )
INFO  01:01:18,428 - #39 ;
INFO  01:01:18,429 - #44 }
INFO  01:01:18,429 - #44 }
