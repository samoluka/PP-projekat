INFO  00:52:52,592 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  00:52:52,599 - #1 program
INFO  00:52:52,600 - #20 Program
INFO  00:52:52,600 - #5 class
INFO  00:52:52,600 - #20 A
INFO  00:52:52,600 - #43 {
INFO  00:52:52,600 - #20 int
INFO  00:52:52,600 - #20 x
INFO  00:52:52,601 - #45 [
INFO  00:52:52,601 - #46 ]
INFO  00:52:52,601 - #40 ,
INFO  00:52:52,601 - #20 y
INFO  00:52:52,601 - #45 [
INFO  00:52:52,601 - #46 ]
INFO  00:52:52,601 - #39 ;
INFO  00:52:52,601 - #44 }
INFO  00:52:52,601 - #8 const
INFO  00:52:52,602 - #20 int
INFO  00:52:52,602 - #20 pi
INFO  00:52:52,602 - #36 =
INFO  00:52:52,602 - #21 3
INFO  00:52:52,602 - #40 ,
INFO  00:52:52,602 - #20 e
INFO  00:52:52,603 - #36 =
INFO  00:52:52,603 - #21 2
INFO  00:52:52,603 - #39 ;
INFO  00:52:52,603 - #5 class
INFO  00:52:52,603 - #20 B
INFO  00:52:52,603 - #14 extends
INFO  00:52:52,603 - #20 A
INFO  00:52:52,603 - #43 {
INFO  00:52:52,603 - #20 int
INFO  00:52:52,604 - #20 i
INFO  00:52:52,604 - #39 ;
INFO  00:52:52,604 - #43 {
INFO  00:52:52,604 - #20 int
INFO  00:52:52,604 - #20 getValue
INFO  00:52:52,604 - #41 (
INFO  00:52:52,604 - #20 int
INFO  00:52:52,604 - #20 a
INFO  00:52:52,604 - #42 )
INFO  00:52:52,604 - #20 int
INFO  00:52:52,605 - #20 b
INFO  00:52:52,605 - #39 ;
INFO  00:52:52,605 - #20 bool
INFO  00:52:52,605 - #20 c
INFO  00:52:52,605 - #39 ;
INFO  00:52:52,605 - #43 {
INFO  00:52:52,606 - #3 return
INFO  00:52:52,606 - #16 this
INFO  00:52:52,606 - #20 i
INFO  00:52:52,606 - #24 +
INFO  00:52:52,606 - #16 this
INFO  00:52:52,606 - #20 x
INFO  00:52:52,606 - #45 [
INFO  00:52:52,607 - #21 0
INFO  00:52:52,607 - #46 ]
INFO  00:52:52,607 - #24 +
INFO  00:52:52,607 - #20 a
INFO  00:52:52,607 - #39 ;
INFO  00:52:52,607 - #44 }
INFO  00:52:52,607 - #50 void
INFO  00:52:52,607 - #20 m
INFO  00:52:52,608 - #41 (
INFO  00:52:52,608 - #42 )
INFO  00:52:52,608 - #43 {
INFO  00:52:52,608 - #44 }
INFO  00:52:52,608 - #44 }
INFO  00:52:52,608 - #44 }
INFO  00:52:52,608 - #5 class
INFO  00:52:52,608 - #20 C
INFO  00:52:52,609 - #14 extends
INFO  00:52:52,609 - #20 B
INFO  00:52:52,609 - #43 {
INFO  00:52:52,609 - #20 A
INFO  00:52:52,609 - #20 theA
INFO  00:52:52,609 - #39 ;
INFO  00:52:52,609 - #20 int
INFO  00:52:52,609 - #20 a
INFO  00:52:52,609 - #39 ;
INFO  00:52:52,609 - #44 }
INFO  00:52:52,609 - #43 {
INFO  00:52:52,609 - #50 void
INFO  00:52:52,610 - #20 main
INFO  00:52:52,610 - #41 (
INFO  00:52:52,610 - #42 )
INFO  00:52:52,610 - #20 A
INFO  00:52:52,610 - #20 a
INFO  00:52:52,610 - #39 ;
INFO  00:52:52,610 - #20 C
INFO  00:52:52,610 - #20 c
INFO  00:52:52,610 - #39 ;
INFO  00:52:52,610 - #20 int
INFO  00:52:52,610 - #20 i
INFO  00:52:52,610 - #39 ;
INFO  00:52:52,611 - #20 int
INFO  00:52:52,611 - #20 x
INFO  00:52:52,611 - #45 [
INFO  00:52:52,611 - #46 ]
INFO  00:52:52,611 - #39 ;
INFO  00:52:52,611 - #20 char
INFO  00:52:52,611 - #20 ch
INFO  00:52:52,611 - #39 ;
INFO  00:52:52,611 - #43 {
INFO  00:52:52,611 - #20 a
INFO  00:52:52,611 - #36 =
INFO  00:52:52,611 - #12 new
INFO  00:52:52,612 - #20 A
INFO  00:52:52,612 - #39 ;
INFO  00:52:52,612 - #20 a
INFO  00:52:52,612 - #20 x
INFO  00:52:52,612 - #36 =
INFO  00:52:52,612 - #12 new
INFO  00:52:52,612 - #20 int
INFO  00:52:52,612 - #45 [
INFO  00:52:52,612 - #21 5
INFO  00:52:52,612 - #46 ]
INFO  00:52:52,613 - #39 ;
INFO  00:52:52,613 - #20 a
INFO  00:52:52,613 - #20 y
INFO  00:52:52,613 - #36 =
INFO  00:52:52,613 - #12 new
INFO  00:52:52,613 - #20 int
INFO  00:52:52,613 - #45 [
INFO  00:52:52,613 - #21 5
INFO  00:52:52,613 - #46 ]
INFO  00:52:52,613 - #39 ;
INFO  00:52:52,613 - #20 c
INFO  00:52:52,614 - #36 =
INFO  00:52:52,614 - #12 new
INFO  00:52:52,614 - #20 C
INFO  00:52:52,614 - #39 ;
INFO  00:52:52,614 - #20 c
INFO  00:52:52,614 - #20 theA
INFO  00:52:52,614 - #36 =
INFO  00:52:52,614 - #20 a
INFO  00:52:52,614 - #39 ;
INFO  00:52:52,614 - #20 c
INFO  00:52:52,614 - #20 x
INFO  00:52:52,614 - #36 =
INFO  00:52:52,615 - #12 new
INFO  00:52:52,615 - #20 int
INFO  00:52:52,615 - #45 [
INFO  00:52:52,615 - #21 5
INFO  00:52:52,615 - #46 ]
INFO  00:52:52,615 - #39 ;
INFO  00:52:52,615 - #20 x
INFO  00:52:52,615 - #36 =
INFO  00:52:52,615 - #12 new
INFO  00:52:52,615 - #20 int
INFO  00:52:52,615 - #45 [
INFO  00:52:52,616 - #21 3
INFO  00:52:52,616 - #46 ]
INFO  00:52:52,616 - #39 ;
INFO  00:52:52,616 - #13 read
INFO  00:52:52,616 - #41 (
INFO  00:52:52,616 - #20 c
INFO  00:52:52,616 - #20 i
INFO  00:52:52,616 - #42 )
INFO  00:52:52,616 - #39 ;
INFO  00:52:52,616 - #20 i
INFO  00:52:52,616 - #36 =
INFO  00:52:52,617 - #21 0
INFO  00:52:52,617 - #39 ;
INFO  00:52:52,617 - #10 do
INFO  00:52:52,617 - #43 {
INFO  00:52:52,617 - #13 read
INFO  00:52:52,617 - #41 (
INFO  00:52:52,617 - #20 c
INFO  00:52:52,617 - #20 x
INFO  00:52:52,617 - #45 [
INFO  00:52:52,617 - #20 i
INFO  00:52:52,617 - #46 ]
INFO  00:52:52,617 - #42 )
INFO  00:52:52,618 - #39 ;
INFO  00:52:52,618 - #13 read
INFO  00:52:52,618 - #41 (
INFO  00:52:52,618 - #20 c
INFO  00:52:52,618 - #20 theA
INFO  00:52:52,618 - #20 x
INFO  00:52:52,618 - #45 [
INFO  00:52:52,618 - #20 i
INFO  00:52:52,618 - #46 ]
INFO  00:52:52,618 - #42 )
INFO  00:52:52,618 - #39 ;
INFO  00:52:52,618 - #20 i
INFO  00:52:52,619 - #28 ++
INFO  00:52:52,619 - #39 ;
INFO  00:52:52,619 - #21 9
INFO  00:52:52,619 - #27 /
INFO  00:52:52,619 - #21 13
INFO  00:52:52,619 - #44 }
INFO  00:52:52,619 - #11 while
INFO  00:52:52,619 - #41 (
INFO  00:52:52,619 - #20 i
INFO  00:52:52,619 - #21 5
INFO  00:52:52,619 - #42 )
INFO  00:52:52,619 - #39 ;
INFO  00:52:52,619 - #2 print
INFO  00:52:52,620 - #41 (
INFO  00:52:52,620 - #20 c
INFO  00:52:52,620 - #20 getValue
INFO  00:52:52,620 - #41 (
INFO  00:52:52,620 - #20 c
INFO  00:52:52,620 - #20 theA
INFO  00:52:52,620 - #20 x
INFO  00:52:52,620 - #45 [
INFO  00:52:52,620 - #21 0
INFO  00:52:52,621 - #46 ]
INFO  00:52:52,621 - #42 )
INFO  00:52:52,621 - #42 )
INFO  00:52:52,621 - #39 ;
INFO  00:52:52,621 - #20 c
INFO  00:52:52,621 - #20 m
INFO  00:52:52,621 - #41 (
INFO  00:52:52,621 - #42 )
INFO  00:52:52,621 - #39 ;
INFO  00:52:52,621 - #44 }
INFO  00:52:52,621 - #44 }
