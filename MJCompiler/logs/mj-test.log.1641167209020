INFO  00:45:12,968 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  00:45:12,975 - #1 program
INFO  00:45:12,975 - #20 Program
INFO  00:45:12,975 - #5 class
INFO  00:45:12,975 - #20 A
INFO  00:45:12,975 - #43 {
INFO  00:45:12,975 - #20 int
INFO  00:45:12,976 - #20 x
INFO  00:45:12,976 - #45 [
INFO  00:45:12,976 - #46 ]
INFO  00:45:12,976 - #38 ,
INFO  00:45:12,976 - #20 y
INFO  00:45:12,976 - #45 [
INFO  00:45:12,976 - #46 ]
INFO  00:45:12,976 - #39 ;
INFO  00:45:12,977 - #44 }
INFO  00:45:12,977 - #8 const
INFO  00:45:12,977 - #20 int
INFO  00:45:12,977 - #20 pi
INFO  00:45:12,977 - #36 =
INFO  00:45:12,977 - #21 3
INFO  00:45:12,977 - #38 ,
INFO  00:45:12,977 - #20 e
INFO  00:45:12,978 - #36 =
INFO  00:45:12,978 - #21 2
INFO  00:45:12,978 - #39 ;
INFO  00:45:12,978 - #5 class
INFO  00:45:12,978 - #20 B
INFO  00:45:12,978 - #14 extends
INFO  00:45:12,978 - #20 A
INFO  00:45:12,978 - #43 {
INFO  00:45:12,979 - #20 int
INFO  00:45:12,979 - #20 i
INFO  00:45:12,979 - #39 ;
INFO  00:45:12,979 - #43 {
INFO  00:45:12,979 - #20 int
INFO  00:45:12,979 - #20 getValue
INFO  00:45:12,979 - #41 (
INFO  00:45:12,979 - #20 int
INFO  00:45:12,979 - #20 a
INFO  00:45:12,979 - #42 )
INFO  00:45:12,980 - #20 int
INFO  00:45:12,980 - #20 b
INFO  00:45:12,980 - #39 ;
INFO  00:45:12,980 - #20 bool
INFO  00:45:12,980 - #20 c
INFO  00:45:12,980 - #39 ;
INFO  00:45:12,980 - #43 {
INFO  00:45:12,980 - #3 return
INFO  00:45:12,980 - #16 this
INFO  00:45:12,980 - #20 i
INFO  00:45:12,981 - #24 +
INFO  00:45:12,981 - #16 this
INFO  00:45:12,981 - #20 x
INFO  00:45:12,981 - #45 [
INFO  00:45:12,981 - #21 0
INFO  00:45:12,981 - #46 ]
INFO  00:45:12,981 - #24 +
INFO  00:45:12,981 - #20 a
INFO  00:45:12,981 - #39 ;
INFO  00:45:12,981 - #44 }
INFO  00:45:12,982 - #48 void
INFO  00:45:12,982 - #20 m
INFO  00:45:12,982 - #41 (
INFO  00:45:12,982 - #42 )
INFO  00:45:12,982 - #43 {
INFO  00:45:12,982 - #44 }
INFO  00:45:12,982 - #44 }
INFO  00:45:12,982 - #44 }
INFO  00:45:12,983 - #5 class
INFO  00:45:12,983 - #20 C
INFO  00:45:12,983 - #14 extends
INFO  00:45:12,983 - #20 B
INFO  00:45:12,983 - #43 {
INFO  00:45:12,983 - #20 A
INFO  00:45:12,983 - #20 theA
INFO  00:45:12,983 - #39 ;
INFO  00:45:12,983 - #20 int
INFO  00:45:12,983 - #20 a
INFO  00:45:12,984 - #39 ;
INFO  00:45:12,984 - #44 }
INFO  00:45:12,984 - #43 {
INFO  00:45:12,984 - #48 void
INFO  00:45:12,984 - #20 main
INFO  00:45:12,984 - #41 (
INFO  00:45:12,984 - #42 )
INFO  00:45:12,984 - #20 A
INFO  00:45:12,984 - #20 a
INFO  00:45:12,984 - #39 ;
INFO  00:45:12,985 - #20 C
INFO  00:45:12,985 - #20 c
INFO  00:45:12,985 - #39 ;
INFO  00:45:12,985 - #20 int
INFO  00:45:12,985 - #20 i
INFO  00:45:12,985 - #39 ;
INFO  00:45:12,985 - #20 int
INFO  00:45:12,985 - #20 x
INFO  00:45:12,985 - #45 [
INFO  00:45:12,985 - #46 ]
INFO  00:45:12,985 - #39 ;
INFO  00:45:12,985 - #20 char
INFO  00:45:12,986 - #20 ch
INFO  00:45:12,986 - #39 ;
INFO  00:45:12,986 - #43 {
INFO  00:45:12,986 - #20 a
INFO  00:45:12,986 - #36 =
INFO  00:45:12,986 - #12 new
INFO  00:45:12,986 - #20 A
INFO  00:45:12,986 - #39 ;
INFO  00:45:12,986 - #20 a
INFO  00:45:12,986 - #20 x
INFO  00:45:12,986 - #36 =
INFO  00:45:12,986 - #12 new
INFO  00:45:12,987 - #20 int
INFO  00:45:12,987 - #45 [
INFO  00:45:12,987 - #21 5
INFO  00:45:12,987 - #46 ]
INFO  00:45:12,987 - #39 ;
INFO  00:45:12,987 - #20 a
INFO  00:45:12,987 - #20 y
INFO  00:45:12,987 - #36 =
INFO  00:45:12,987 - #12 new
INFO  00:45:12,987 - #20 int
INFO  00:45:12,987 - #45 [
INFO  00:45:12,987 - #21 5
INFO  00:45:12,988 - #46 ]
INFO  00:45:12,988 - #39 ;
INFO  00:45:12,988 - #20 c
INFO  00:45:12,988 - #36 =
INFO  00:45:12,988 - #12 new
INFO  00:45:12,988 - #20 C
INFO  00:45:12,988 - #39 ;
INFO  00:45:12,988 - #20 c
INFO  00:45:12,988 - #20 theA
INFO  00:45:12,988 - #36 =
INFO  00:45:12,988 - #20 a
INFO  00:45:12,989 - #39 ;
INFO  00:45:12,989 - #20 c
INFO  00:45:12,989 - #20 x
INFO  00:45:12,989 - #36 =
INFO  00:45:12,989 - #12 new
INFO  00:45:12,989 - #20 int
INFO  00:45:12,989 - #45 [
INFO  00:45:12,989 - #21 5
INFO  00:45:12,989 - #46 ]
INFO  00:45:12,989 - #39 ;
INFO  00:45:12,989 - #20 x
INFO  00:45:12,989 - #36 =
INFO  00:45:12,990 - #12 new
INFO  00:45:12,990 - #20 int
INFO  00:45:12,990 - #45 [
INFO  00:45:12,990 - #21 3
INFO  00:45:12,990 - #46 ]
INFO  00:45:12,990 - #39 ;
INFO  00:45:12,990 - #13 read
INFO  00:45:12,990 - #41 (
INFO  00:45:12,990 - #20 c
INFO  00:45:12,990 - #20 i
INFO  00:45:12,991 - #42 )
INFO  00:45:12,991 - #39 ;
INFO  00:45:12,991 - #20 i
INFO  00:45:12,991 - #36 =
INFO  00:45:12,991 - #21 0
INFO  00:45:12,991 - #39 ;
INFO  00:45:12,991 - #10 do
INFO  00:45:12,991 - #43 {
INFO  00:45:12,991 - #13 read
INFO  00:45:12,991 - #41 (
INFO  00:45:12,991 - #20 c
INFO  00:45:12,991 - #20 x
INFO  00:45:12,992 - #45 [
INFO  00:45:12,992 - #20 i
INFO  00:45:12,992 - #46 ]
INFO  00:45:12,992 - #42 )
INFO  00:45:12,992 - #39 ;
INFO  00:45:12,992 - #13 read
INFO  00:45:12,992 - #41 (
INFO  00:45:12,992 - #20 c
INFO  00:45:12,992 - #20 theA
INFO  00:45:12,992 - #20 x
INFO  00:45:12,992 - #45 [
INFO  00:45:12,992 - #20 i
INFO  00:45:12,993 - #46 ]
INFO  00:45:12,993 - #42 )
INFO  00:45:12,993 - #39 ;
INFO  00:45:12,993 - #20 i
INFO  00:45:12,993 - #28 ++
INFO  00:45:12,993 - #39 ;
INFO  00:45:12,993 - #21 9
INFO  00:45:12,993 - #27 /
INFO  00:45:12,993 - #21 13
INFO  00:45:12,993 - #44 }
INFO  00:45:12,993 - #11 while
INFO  00:45:12,993 - #41 (
INFO  00:45:12,994 - #20 i
INFO  00:45:12,994 - #21 5
INFO  00:45:12,994 - #42 )
INFO  00:45:12,994 - #39 ;
INFO  00:45:12,994 - #2 print
INFO  00:45:12,994 - #41 (
INFO  00:45:12,994 - #20 c
INFO  00:45:12,994 - #20 getValue
INFO  00:45:12,994 - #41 (
INFO  00:45:12,994 - #20 c
INFO  00:45:12,994 - #20 theA
INFO  00:45:12,995 - #20 x
INFO  00:45:12,995 - #45 [
INFO  00:45:12,995 - #21 0
INFO  00:45:12,995 - #46 ]
INFO  00:45:12,995 - #42 )
INFO  00:45:12,995 - #42 )
INFO  00:45:12,995 - #39 ;
INFO  00:45:12,995 - #20 c
INFO  00:45:12,995 - #20 m
INFO  00:45:12,995 - #41 (
INFO  00:45:12,995 - #42 )
INFO  00:45:12,995 - #39 ;
INFO  00:45:12,995 - #44 }
INFO  00:45:12,996 - #44 }
