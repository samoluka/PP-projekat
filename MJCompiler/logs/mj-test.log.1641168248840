INFO  01:02:42,913 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  01:02:42,920 - #1 program
INFO  01:02:42,921 - #20 Program
INFO  01:02:42,921 - #5 class
INFO  01:02:42,921 - #20 A
INFO  01:02:42,921 - #43 {
INFO  01:02:42,921 - #20 int
INFO  01:02:42,921 - #20 x
INFO  01:02:42,921 - #45 [
INFO  01:02:42,922 - #46 ]
INFO  01:02:42,922 - #40 ,
INFO  01:02:42,922 - #20 y
INFO  01:02:42,922 - #45 [
INFO  01:02:42,922 - #46 ]
INFO  01:02:42,922 - #39 ;
INFO  01:02:42,922 - #44 }
INFO  01:02:42,922 - #8 const
INFO  01:02:42,923 - #20 int
INFO  01:02:42,923 - #20 pi
INFO  01:02:42,923 - #36 =
INFO  01:02:42,923 - #21 3
INFO  01:02:42,923 - #40 ,
INFO  01:02:42,923 - #20 e
INFO  01:02:42,924 - #36 =
INFO  01:02:42,924 - #21 2
INFO  01:02:42,924 - #39 ;
INFO  01:02:42,924 - #5 class
INFO  01:02:42,924 - #20 B
INFO  01:02:42,924 - #14 extends
INFO  01:02:42,924 - #20 A
INFO  01:02:42,924 - #43 {
INFO  01:02:42,924 - #20 int
INFO  01:02:42,924 - #20 i
INFO  01:02:42,925 - #39 ;
INFO  01:02:42,925 - #43 {
INFO  01:02:42,925 - #20 int
INFO  01:02:42,925 - #20 getValue
INFO  01:02:42,925 - #41 (
INFO  01:02:42,925 - #20 int
INFO  01:02:42,925 - #20 a
INFO  01:02:42,925 - #42 )
INFO  01:02:42,925 - #20 int
INFO  01:02:42,925 - #20 b
INFO  01:02:42,926 - #39 ;
INFO  01:02:42,926 - #20 bool
INFO  01:02:42,926 - #20 c
INFO  01:02:42,926 - #39 ;
INFO  01:02:42,926 - #43 {
INFO  01:02:42,926 - #3 return
INFO  01:02:42,926 - #16 this
INFO  01:02:42,926 - #20 i
INFO  01:02:42,927 - #24 +
INFO  01:02:42,927 - #16 this
INFO  01:02:42,927 - #20 x
INFO  01:02:42,927 - #45 [
INFO  01:02:42,927 - #21 0
INFO  01:02:42,927 - #46 ]
INFO  01:02:42,927 - #24 +
INFO  01:02:42,927 - #20 a
INFO  01:02:42,927 - #39 ;
INFO  01:02:42,928 - #44 }
INFO  01:02:42,928 - #50 void
INFO  01:02:42,928 - #20 m
INFO  01:02:42,928 - #41 (
INFO  01:02:42,928 - #42 )
INFO  01:02:42,928 - #43 {
INFO  01:02:42,928 - #44 }
INFO  01:02:42,928 - #44 }
INFO  01:02:42,928 - #44 }
INFO  01:02:42,929 - #5 class
INFO  01:02:42,929 - #20 C
INFO  01:02:42,929 - #14 extends
INFO  01:02:42,929 - #20 B
INFO  01:02:42,929 - #43 {
INFO  01:02:42,929 - #20 A
INFO  01:02:42,929 - #20 theA
INFO  01:02:42,929 - #39 ;
INFO  01:02:42,929 - #20 int
INFO  01:02:42,929 - #20 a
INFO  01:02:42,929 - #39 ;
INFO  01:02:42,930 - #44 }
INFO  01:02:42,930 - #43 {
INFO  01:02:42,930 - #50 void
INFO  01:02:42,930 - #20 main
INFO  01:02:42,930 - #41 (
INFO  01:02:42,930 - #42 )
INFO  01:02:42,930 - #20 A
INFO  01:02:42,930 - #20 a
INFO  01:02:42,930 - #39 ;
INFO  01:02:42,931 - #20 C
INFO  01:02:42,931 - #20 c
INFO  01:02:42,931 - #39 ;
INFO  01:02:42,931 - #20 int
INFO  01:02:42,931 - #20 i
INFO  01:02:42,931 - #39 ;
INFO  01:02:42,931 - #20 int
INFO  01:02:42,931 - #20 x
INFO  01:02:42,932 - #45 [
INFO  01:02:42,932 - #46 ]
INFO  01:02:42,932 - #39 ;
INFO  01:02:42,932 - #20 char
INFO  01:02:42,932 - #20 ch
INFO  01:02:42,932 - #39 ;
INFO  01:02:42,932 - #43 {
INFO  01:02:42,932 - #20 a
INFO  01:02:42,932 - #36 =
INFO  01:02:42,932 - #12 new
INFO  01:02:42,933 - #20 A
INFO  01:02:42,933 - #39 ;
INFO  01:02:42,933 - #20 a
INFO  01:02:42,933 - #20 x
INFO  01:02:42,933 - #36 =
INFO  01:02:42,933 - #12 new
INFO  01:02:42,933 - #20 int
INFO  01:02:42,933 - #45 [
INFO  01:02:42,933 - #21 5
INFO  01:02:42,933 - #46 ]
INFO  01:02:42,933 - #39 ;
INFO  01:02:42,934 - #20 a
INFO  01:02:42,934 - #20 y
INFO  01:02:42,934 - #36 =
INFO  01:02:42,934 - #12 new
INFO  01:02:42,934 - #20 int
INFO  01:02:42,934 - #45 [
INFO  01:02:42,934 - #21 5
INFO  01:02:42,934 - #46 ]
INFO  01:02:42,934 - #39 ;
INFO  01:02:42,934 - #20 c
INFO  01:02:42,935 - #36 =
INFO  01:02:42,935 - #12 new
INFO  01:02:42,935 - #20 C
INFO  01:02:42,935 - #39 ;
INFO  01:02:42,935 - #20 c
INFO  01:02:42,935 - #20 theA
INFO  01:02:42,935 - #36 =
INFO  01:02:42,935 - #20 a
INFO  01:02:42,935 - #39 ;
INFO  01:02:42,935 - #20 c
INFO  01:02:42,935 - #20 x
INFO  01:02:42,936 - #36 =
INFO  01:02:42,936 - #12 new
INFO  01:02:42,936 - #20 int
INFO  01:02:42,936 - #45 [
INFO  01:02:42,936 - #21 5
INFO  01:02:42,936 - #46 ]
INFO  01:02:42,936 - #39 ;
INFO  01:02:42,936 - #20 x
INFO  01:02:42,936 - #36 =
INFO  01:02:42,936 - #12 new
INFO  01:02:42,936 - #20 int
INFO  01:02:42,937 - #45 [
INFO  01:02:42,937 - #21 3
INFO  01:02:42,937 - #46 ]
INFO  01:02:42,937 - #39 ;
INFO  01:02:42,937 - #13 read
INFO  01:02:42,937 - #41 (
INFO  01:02:42,937 - #20 c
INFO  01:02:42,937 - #20 i
INFO  01:02:42,937 - #42 )
INFO  01:02:42,937 - #39 ;
INFO  01:02:42,937 - #20 i
INFO  01:02:42,937 - #36 =
INFO  01:02:42,938 - #21 0
INFO  01:02:42,938 - #39 ;
INFO  01:02:42,938 - #10 do
INFO  01:02:42,938 - #43 {
INFO  01:02:42,938 - #13 read
INFO  01:02:42,938 - #41 (
INFO  01:02:42,938 - #20 c
INFO  01:02:42,938 - #20 x
INFO  01:02:42,938 - #45 [
INFO  01:02:42,938 - #20 i
INFO  01:02:42,938 - #46 ]
INFO  01:02:42,939 - #42 )
INFO  01:02:42,939 - #39 ;
INFO  01:02:42,939 - #13 read
INFO  01:02:42,939 - #41 (
INFO  01:02:42,939 - #20 c
INFO  01:02:42,939 - #20 theA
INFO  01:02:42,939 - #20 x
INFO  01:02:42,939 - #45 [
INFO  01:02:42,939 - #20 i
INFO  01:02:42,940 - #46 ]
INFO  01:02:42,940 - #42 )
INFO  01:02:42,940 - #39 ;
INFO  01:02:42,940 - #20 i
INFO  01:02:42,940 - #28 ++
INFO  01:02:42,940 - #39 ;
INFO  01:02:42,940 - #21 9
INFO  01:02:42,940 - #27 /
INFO  01:02:42,940 - #21 13
INFO  01:02:42,940 - #44 }
INFO  01:02:42,940 - #11 while
INFO  01:02:42,940 - #41 (
INFO  01:02:42,940 - #20 i
INFO  01:02:42,941 - #21 5
INFO  01:02:42,941 - #42 )
INFO  01:02:42,941 - #39 ;
INFO  01:02:42,941 - #2 print
INFO  01:02:42,941 - #41 (
INFO  01:02:42,941 - #20 c
INFO  01:02:42,941 - #20 getValue
INFO  01:02:42,941 - #41 (
INFO  01:02:42,941 - #20 c
INFO  01:02:42,941 - #20 theA
INFO  01:02:42,942 - #20 x
INFO  01:02:42,942 - #45 [
INFO  01:02:42,942 - #21 0
INFO  01:02:42,942 - #46 ]
INFO  01:02:42,942 - #42 )
INFO  01:02:42,942 - #42 )
INFO  01:02:42,942 - #39 ;
INFO  01:02:42,942 - #20 c
INFO  01:02:42,942 - #20 m
INFO  01:02:42,942 - #41 (
INFO  01:02:42,942 - #42 )
INFO  01:02:42,942 - #39 ;
INFO  01:02:42,942 - #44 }
INFO  01:02:42,943 - #44 }
