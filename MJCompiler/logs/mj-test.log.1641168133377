INFO  01:01:41,721 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  01:01:41,729 - #1 program
INFO  01:01:41,729 - #20 Program
INFO  01:01:41,729 - #5 class
INFO  01:01:41,729 - #20 A
INFO  01:01:41,729 - #43 {
INFO  01:01:41,729 - #20 int
INFO  01:01:41,729 - #20 x
INFO  01:01:41,730 - #45 [
INFO  01:01:41,730 - #46 ]
INFO  01:01:41,730 - #40 ,
INFO  01:01:41,730 - #20 y
INFO  01:01:41,730 - #45 [
INFO  01:01:41,730 - #46 ]
INFO  01:01:41,730 - #39 ;
INFO  01:01:41,730 - #44 }
INFO  01:01:41,731 - #8 const
INFO  01:01:41,731 - #20 int
INFO  01:01:41,731 - #20 pi
INFO  01:01:41,731 - #36 =
INFO  01:01:41,731 - #21 3
INFO  01:01:41,731 - #40 ,
INFO  01:01:41,731 - #20 e
INFO  01:01:41,732 - #36 =
INFO  01:01:41,732 - #21 2
INFO  01:01:41,732 - #39 ;
INFO  01:01:41,732 - #5 class
INFO  01:01:41,732 - #20 B
INFO  01:01:41,732 - #14 extends
INFO  01:01:41,733 - #20 A
INFO  01:01:41,733 - #43 {
INFO  01:01:41,733 - #20 int
INFO  01:01:41,733 - #20 i
INFO  01:01:41,733 - #39 ;
INFO  01:01:41,733 - #43 {
INFO  01:01:41,733 - #20 int
INFO  01:01:41,733 - #20 getValue
INFO  01:01:41,733 - #41 (
INFO  01:01:41,733 - #20 int
INFO  01:01:41,734 - #20 a
INFO  01:01:41,734 - #42 )
INFO  01:01:41,734 - #20 int
INFO  01:01:41,734 - #20 b
INFO  01:01:41,734 - #39 ;
INFO  01:01:41,734 - #20 bool
INFO  01:01:41,734 - #20 c
INFO  01:01:41,734 - #39 ;
INFO  01:01:41,734 - #43 {
INFO  01:01:41,735 - #3 return
INFO  01:01:41,735 - #16 this
INFO  01:01:41,735 - #20 i
INFO  01:01:41,735 - #24 +
INFO  01:01:41,735 - #16 this
INFO  01:01:41,735 - #20 x
INFO  01:01:41,735 - #45 [
INFO  01:01:41,736 - #21 0
INFO  01:01:41,736 - #46 ]
INFO  01:01:41,736 - #24 +
INFO  01:01:41,736 - #20 a
INFO  01:01:41,736 - #39 ;
INFO  01:01:41,736 - #44 }
INFO  01:01:41,736 - #50 void
INFO  01:01:41,736 - #20 m
INFO  01:01:41,736 - #41 (
INFO  01:01:41,737 - #42 )
INFO  01:01:41,737 - #43 {
INFO  01:01:41,737 - #44 }
INFO  01:01:41,737 - #44 }
INFO  01:01:41,737 - #44 }
INFO  01:01:41,737 - #5 class
INFO  01:01:41,737 - #20 C
INFO  01:01:41,737 - #14 extends
INFO  01:01:41,738 - #20 B
INFO  01:01:41,738 - #43 {
INFO  01:01:41,738 - #20 A
INFO  01:01:41,738 - #20 theA
INFO  01:01:41,738 - #39 ;
INFO  01:01:41,738 - #20 int
INFO  01:01:41,739 - #20 a
INFO  01:01:41,739 - #39 ;
INFO  01:01:41,739 - #44 }
INFO  01:01:41,739 - #43 {
INFO  01:01:41,739 - #50 void
INFO  01:01:41,739 - #20 main
INFO  01:01:41,739 - #41 (
INFO  01:01:41,739 - #42 )
INFO  01:01:41,740 - #20 A
INFO  01:01:41,740 - #20 a
INFO  01:01:41,740 - #39 ;
INFO  01:01:41,740 - #20 C
INFO  01:01:41,740 - #20 c
INFO  01:01:41,740 - #39 ;
INFO  01:01:41,741 - #20 int
INFO  01:01:41,741 - #20 i
INFO  01:01:41,741 - #39 ;
INFO  01:01:41,741 - #20 int
INFO  01:01:41,741 - #20 x
INFO  01:01:41,741 - #45 [
INFO  01:01:41,741 - #46 ]
INFO  01:01:41,741 - #39 ;
INFO  01:01:41,741 - #20 char
INFO  01:01:41,741 - #20 ch
INFO  01:01:41,742 - #39 ;
INFO  01:01:41,742 - #43 {
INFO  01:01:41,742 - #20 a
INFO  01:01:41,742 - #36 =
INFO  01:01:41,742 - #12 new
INFO  01:01:41,742 - #20 A
INFO  01:01:41,742 - #39 ;
INFO  01:01:41,742 - #20 a
INFO  01:01:41,742 - #20 x
INFO  01:01:41,742 - #36 =
INFO  01:01:41,743 - #12 new
INFO  01:01:41,743 - #20 int
INFO  01:01:41,743 - #45 [
INFO  01:01:41,743 - #21 5
INFO  01:01:41,743 - #46 ]
INFO  01:01:41,743 - #39 ;
INFO  01:01:41,743 - #20 a
INFO  01:01:41,743 - #20 y
INFO  01:01:41,743 - #36 =
INFO  01:01:41,744 - #12 new
INFO  01:01:41,744 - #20 int
INFO  01:01:41,744 - #45 [
INFO  01:01:41,744 - #21 5
INFO  01:01:41,744 - #46 ]
INFO  01:01:41,744 - #39 ;
INFO  01:01:41,744 - #20 c
INFO  01:01:41,744 - #36 =
INFO  01:01:41,744 - #12 new
INFO  01:01:41,745 - #20 C
INFO  01:01:41,745 - #39 ;
INFO  01:01:41,745 - #20 c
INFO  01:01:41,745 - #20 theA
INFO  01:01:41,745 - #36 =
INFO  01:01:41,745 - #20 a
INFO  01:01:41,745 - #39 ;
INFO  01:01:41,745 - #20 c
INFO  01:01:41,745 - #20 x
INFO  01:01:41,746 - #36 =
INFO  01:01:41,746 - #12 new
INFO  01:01:41,746 - #20 int
INFO  01:01:41,746 - #45 [
INFO  01:01:41,746 - #21 5
INFO  01:01:41,746 - #46 ]
INFO  01:01:41,746 - #39 ;
INFO  01:01:41,746 - #20 x
INFO  01:01:41,746 - #36 =
INFO  01:01:41,746 - #12 new
INFO  01:01:41,747 - #20 int
INFO  01:01:41,747 - #45 [
INFO  01:01:41,747 - #21 3
INFO  01:01:41,747 - #46 ]
INFO  01:01:41,747 - #39 ;
INFO  01:01:41,747 - #13 read
INFO  01:01:41,747 - #41 (
INFO  01:01:41,748 - #20 c
INFO  01:01:41,748 - #20 i
INFO  01:01:41,748 - #42 )
INFO  01:01:41,748 - #39 ;
INFO  01:01:41,748 - #20 i
INFO  01:01:41,748 - #36 =
INFO  01:01:41,749 - #21 0
INFO  01:01:41,749 - #39 ;
INFO  01:01:41,749 - #10 do
INFO  01:01:41,749 - #43 {
INFO  01:01:41,749 - #13 read
INFO  01:01:41,749 - #41 (
INFO  01:01:41,749 - #20 c
INFO  01:01:41,749 - #20 x
INFO  01:01:41,749 - #45 [
INFO  01:01:41,749 - #20 i
INFO  01:01:41,750 - #46 ]
INFO  01:01:41,750 - #42 )
INFO  01:01:41,750 - #39 ;
INFO  01:01:41,750 - #13 read
INFO  01:01:41,750 - #41 (
INFO  01:01:41,751 - #20 c
INFO  01:01:41,751 - #20 theA
INFO  01:01:41,751 - #20 x
INFO  01:01:41,751 - #45 [
INFO  01:01:41,751 - #20 i
INFO  01:01:41,751 - #46 ]
INFO  01:01:41,751 - #42 )
INFO  01:01:41,751 - #39 ;
INFO  01:01:41,752 - #20 i
INFO  01:01:41,752 - #28 ++
INFO  01:01:41,752 - #39 ;
INFO  01:01:41,752 - #21 9
INFO  01:01:41,752 - #27 /
INFO  01:01:41,752 - #21 13
INFO  01:01:41,752 - #44 }
INFO  01:01:41,752 - #11 while
INFO  01:01:41,752 - #41 (
INFO  01:01:41,752 - #20 i
INFO  01:01:41,753 - #21 5
INFO  01:01:41,753 - #42 )
INFO  01:01:41,753 - #39 ;
INFO  01:01:41,753 - #2 print
INFO  01:01:41,753 - #41 (
INFO  01:01:41,753 - #20 c
INFO  01:01:41,753 - #20 getValue
INFO  01:01:41,753 - #41 (
INFO  01:01:41,754 - #20 c
INFO  01:01:41,754 - #20 theA
INFO  01:01:41,754 - #20 x
INFO  01:01:41,754 - #45 [
INFO  01:01:41,754 - #21 0
INFO  01:01:41,754 - #46 ]
INFO  01:01:41,754 - #42 )
INFO  01:01:41,755 - #42 )
INFO  01:01:41,755 - #39 ;
INFO  01:01:41,755 - #20 c
INFO  01:01:41,755 - #20 m
INFO  01:01:41,755 - #41 (
INFO  01:01:41,755 - #42 )
INFO  01:01:41,755 - #39 ;
INFO  01:01:41,755 - #44 }
INFO  01:01:41,756 - #44 }
