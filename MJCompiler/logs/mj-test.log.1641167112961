INFO  00:43:25,051 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  00:43:25,059 - #1 program
INFO  00:43:25,059 - #20 Program
INFO  00:43:25,059 - #5 class
INFO  00:43:25,059 - #20 A
INFO  00:43:25,059 - #43 {
INFO  00:43:25,060 - #20 int
INFO  00:43:25,060 - #20 x
INFO  00:43:25,060 - #45 [
INFO  00:43:25,060 - #46 ]
INFO  00:43:25,060 - #38 ,
INFO  00:43:25,060 - #20 y
INFO  00:43:25,060 - #45 [
INFO  00:43:25,061 - #46 ]
INFO  00:43:25,061 - #39 ;
INFO  00:43:25,061 - #44 }
INFO  00:43:25,061 - #8 const
INFO  00:43:25,061 - #20 int
INFO  00:43:25,061 - #20 pi
INFO  00:43:25,061 - #36 =
INFO  00:43:25,061 - #21 3
INFO  00:43:25,062 - #38 ,
INFO  00:43:25,062 - #20 e
INFO  00:43:25,062 - #36 =
INFO  00:43:25,062 - #21 2
INFO  00:43:25,062 - #39 ;
INFO  00:43:25,063 - #5 class
INFO  00:43:25,063 - #20 B
INFO  00:43:25,063 - #14 extends
INFO  00:43:25,063 - #20 A
INFO  00:43:25,063 - #43 {
INFO  00:43:25,063 - #20 int
INFO  00:43:25,063 - #20 i
INFO  00:43:25,063 - #39 ;
INFO  00:43:25,063 - #43 {
INFO  00:43:25,063 - #20 int
INFO  00:43:25,064 - #20 getValue
INFO  00:43:25,064 - #41 (
INFO  00:43:25,064 - #20 int
INFO  00:43:25,064 - #20 a
INFO  00:43:25,064 - #42 )
INFO  00:43:25,064 - #20 int
INFO  00:43:25,064 - #20 b
INFO  00:43:25,064 - #39 ;
INFO  00:43:25,065 - #20 bool
INFO  00:43:25,065 - #20 c
INFO  00:43:25,065 - #39 ;
INFO  00:43:25,065 - #43 {
INFO  00:43:25,065 - #3 return
INFO  00:43:25,065 - #16 this
INFO  00:43:25,065 - #20 i
INFO  00:43:25,065 - #24 +
INFO  00:43:25,065 - #16 this
INFO  00:43:25,066 - #20 x
INFO  00:43:25,066 - #45 [
INFO  00:43:25,066 - #21 0
INFO  00:43:25,066 - #46 ]
INFO  00:43:25,066 - #24 +
INFO  00:43:25,066 - #20 a
INFO  00:43:25,066 - #39 ;
INFO  00:43:25,066 - #44 }
INFO  00:43:25,067 - #48 void
INFO  00:43:25,067 - #20 m
INFO  00:43:25,067 - #41 (
INFO  00:43:25,067 - #42 )
INFO  00:43:25,067 - #43 {
INFO  00:43:25,067 - #44 }
INFO  00:43:25,067 - #44 }
INFO  00:43:25,068 - #44 }
INFO  00:43:25,068 - #5 class
INFO  00:43:25,068 - #20 C
INFO  00:43:25,068 - #14 extends
INFO  00:43:25,068 - #20 B
INFO  00:43:25,068 - #43 {
INFO  00:43:25,068 - #20 A
INFO  00:43:25,068 - #20 theA
INFO  00:43:25,068 - #39 ;
INFO  00:43:25,068 - #20 int
INFO  00:43:25,069 - #20 a
INFO  00:43:25,069 - #39 ;
INFO  00:43:25,069 - #44 }
INFO  00:43:25,069 - #43 {
INFO  00:43:25,069 - #48 void
INFO  00:43:25,069 - #20 main
INFO  00:43:25,069 - #41 (
INFO  00:43:25,069 - #42 )
INFO  00:43:25,069 - #20 A
INFO  00:43:25,069 - #20 a
INFO  00:43:25,069 - #39 ;
INFO  00:43:25,070 - #20 C
INFO  00:43:25,070 - #20 c
INFO  00:43:25,070 - #39 ;
INFO  00:43:25,070 - #20 int
INFO  00:43:25,070 - #20 i
INFO  00:43:25,070 - #39 ;
INFO  00:43:25,070 - #20 int
INFO  00:43:25,070 - #20 x
INFO  00:43:25,070 - #45 [
INFO  00:43:25,070 - #46 ]
INFO  00:43:25,070 - #39 ;
INFO  00:43:25,070 - #20 char
INFO  00:43:25,071 - #20 ch
INFO  00:43:25,071 - #39 ;
INFO  00:43:25,071 - #43 {
INFO  00:43:25,071 - #20 a
INFO  00:43:25,071 - #36 =
INFO  00:43:25,071 - #12 new
INFO  00:43:25,071 - #20 A
INFO  00:43:25,071 - #39 ;
INFO  00:43:25,071 - #20 a
INFO  00:43:25,072 - #20 x
INFO  00:43:25,072 - #36 =
INFO  00:43:25,072 - #12 new
INFO  00:43:25,072 - #20 int
INFO  00:43:25,072 - #45 [
INFO  00:43:25,072 - #21 5
INFO  00:43:25,072 - #46 ]
INFO  00:43:25,072 - #39 ;
INFO  00:43:25,072 - #20 a
INFO  00:43:25,072 - #20 y
INFO  00:43:25,072 - #36 =
INFO  00:43:25,072 - #12 new
INFO  00:43:25,073 - #20 int
INFO  00:43:25,073 - #45 [
INFO  00:43:25,073 - #21 5
INFO  00:43:25,073 - #46 ]
INFO  00:43:25,073 - #39 ;
INFO  00:43:25,073 - #20 c
INFO  00:43:25,073 - #36 =
INFO  00:43:25,073 - #12 new
INFO  00:43:25,073 - #20 C
INFO  00:43:25,073 - #39 ;
INFO  00:43:25,074 - #20 c
INFO  00:43:25,074 - #20 theA
INFO  00:43:25,074 - #36 =
INFO  00:43:25,074 - #20 a
INFO  00:43:25,074 - #39 ;
INFO  00:43:25,074 - #20 c
INFO  00:43:25,074 - #20 x
INFO  00:43:25,074 - #36 =
INFO  00:43:25,074 - #12 new
INFO  00:43:25,074 - #20 int
INFO  00:43:25,075 - #45 [
INFO  00:43:25,075 - #21 5
INFO  00:43:25,075 - #46 ]
INFO  00:43:25,075 - #39 ;
INFO  00:43:25,075 - #20 x
INFO  00:43:25,075 - #36 =
INFO  00:43:25,075 - #12 new
INFO  00:43:25,075 - #20 int
INFO  00:43:25,075 - #45 [
INFO  00:43:25,075 - #21 3
INFO  00:43:25,075 - #46 ]
INFO  00:43:25,076 - #39 ;
INFO  00:43:25,076 - #13 read
INFO  00:43:25,076 - #41 (
INFO  00:43:25,076 - #20 c
INFO  00:43:25,076 - #20 i
INFO  00:43:25,076 - #42 )
INFO  00:43:25,076 - #39 ;
INFO  00:43:25,076 - #20 i
INFO  00:43:25,076 - #36 =
INFO  00:43:25,076 - #21 0
INFO  00:43:25,076 - #39 ;
INFO  00:43:25,077 - #10 do
INFO  00:43:25,077 - #43 {
INFO  00:43:25,077 - #13 read
INFO  00:43:25,077 - #41 (
INFO  00:43:25,077 - #20 c
INFO  00:43:25,077 - #20 x
INFO  00:43:25,077 - #45 [
INFO  00:43:25,077 - #20 i
INFO  00:43:25,077 - #46 ]
INFO  00:43:25,077 - #42 )
INFO  00:43:25,077 - #39 ;
INFO  00:43:25,077 - #13 read
INFO  00:43:25,077 - #41 (
INFO  00:43:25,078 - #20 c
INFO  00:43:25,078 - #20 theA
INFO  00:43:25,078 - #20 x
INFO  00:43:25,078 - #45 [
INFO  00:43:25,078 - #20 i
INFO  00:43:25,078 - #46 ]
INFO  00:43:25,078 - #42 )
INFO  00:43:25,078 - #39 ;
INFO  00:43:25,078 - #20 i
INFO  00:43:25,078 - #28 ++
INFO  00:43:25,078 - #39 ;
INFO  00:43:25,078 - #21 9
INFO  00:43:25,079 - #27 /
INFO  00:43:25,079 - #21 13
INFO  00:43:25,079 - #44 }
INFO  00:43:25,079 - #11 while
INFO  00:43:25,079 - #41 (
INFO  00:43:25,079 - #20 i
INFO  00:43:25,079 - #21 5
INFO  00:43:25,079 - #42 )
INFO  00:43:25,080 - #39 ;
INFO  00:43:25,080 - #2 print
INFO  00:43:25,080 - #41 (
INFO  00:43:25,080 - #20 c
INFO  00:43:25,080 - #20 getValue
INFO  00:43:25,080 - #41 (
INFO  00:43:25,080 - #20 c
INFO  00:43:25,080 - #20 theA
INFO  00:43:25,080 - #20 x
INFO  00:43:25,080 - #45 [
INFO  00:43:25,080 - #21 0
INFO  00:43:25,080 - #46 ]
INFO  00:43:25,081 - #42 )
INFO  00:43:25,081 - #42 )
INFO  00:43:25,081 - #39 ;
INFO  00:43:25,081 - #20 c
INFO  00:43:25,081 - #20 m
INFO  00:43:25,081 - #41 (
INFO  00:43:25,081 - #42 )
INFO  00:43:25,081 - #39 ;
INFO  00:43:25,081 - #44 }
INFO  00:43:25,081 - #44 }
