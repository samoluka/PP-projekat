INFO  00:49:53,602 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  00:49:53,609 - #1 program
INFO  00:49:53,610 - #20 Program
INFO  00:49:53,610 - #5 class
INFO  00:49:53,610 - #20 A
INFO  00:49:53,610 - #43 {
INFO  00:49:53,610 - #20 int
INFO  00:49:53,610 - #20 x
INFO  00:49:53,610 - #45 [
INFO  00:49:53,610 - #46 ]
INFO  00:49:53,611 - #40 ,
INFO  00:49:53,611 - #20 y
INFO  00:49:53,611 - #45 [
INFO  00:49:53,611 - #46 ]
INFO  00:49:53,611 - #39 ;
INFO  00:49:53,611 - #44 }
INFO  00:49:53,611 - #8 const
INFO  00:49:53,611 - #20 int
INFO  00:49:53,612 - #20 pi
INFO  00:49:53,612 - #36 =
INFO  00:49:53,612 - #21 3
INFO  00:49:53,612 - #40 ,
INFO  00:49:53,612 - #20 e
INFO  00:49:53,620 - #36 =
INFO  00:49:53,621 - #21 2
INFO  00:49:53,621 - #39 ;
INFO  00:49:53,621 - #5 class
INFO  00:49:53,621 - #20 B
INFO  00:49:53,621 - #14 extends
INFO  00:49:53,621 - #20 A
INFO  00:49:53,622 - #43 {
INFO  00:49:53,622 - #20 int
INFO  00:49:53,622 - #20 i
INFO  00:49:53,622 - #39 ;
INFO  00:49:53,622 - #43 {
INFO  00:49:53,622 - #20 int
INFO  00:49:53,622 - #20 getValue
INFO  00:49:53,623 - #41 (
INFO  00:49:53,623 - #20 int
INFO  00:49:53,623 - #20 a
INFO  00:49:53,623 - #42 )
INFO  00:49:53,623 - #20 int
INFO  00:49:53,623 - #20 b
INFO  00:49:53,624 - #39 ;
INFO  00:49:53,624 - #20 bool
INFO  00:49:53,624 - #20 c
INFO  00:49:53,624 - #39 ;
INFO  00:49:53,624 - #43 {
INFO  00:49:53,625 - #3 return
INFO  00:49:53,625 - #16 this
INFO  00:49:53,625 - #20 i
INFO  00:49:53,625 - #24 +
INFO  00:49:53,625 - #16 this
INFO  00:49:53,626 - #20 x
INFO  00:49:53,626 - #45 [
INFO  00:49:53,626 - #21 0
INFO  00:49:53,626 - #46 ]
INFO  00:49:53,626 - #24 +
INFO  00:49:53,627 - #20 a
INFO  00:49:53,627 - #39 ;
INFO  00:49:53,627 - #44 }
INFO  00:49:53,627 - #50 void
INFO  00:49:53,627 - #20 m
INFO  00:49:53,627 - #41 (
INFO  00:49:53,628 - #42 )
INFO  00:49:53,628 - #43 {
INFO  00:49:53,628 - #44 }
INFO  00:49:53,628 - #44 }
INFO  00:49:53,629 - #44 }
INFO  00:49:53,629 - #5 class
INFO  00:49:53,629 - #20 C
INFO  00:49:53,629 - #14 extends
INFO  00:49:53,629 - #20 B
INFO  00:49:53,629 - #43 {
INFO  00:49:53,629 - #20 A
INFO  00:49:53,629 - #20 theA
INFO  00:49:53,629 - #39 ;
INFO  00:49:53,629 - #20 int
INFO  00:49:53,629 - #20 a
INFO  00:49:53,630 - #39 ;
INFO  00:49:53,630 - #44 }
INFO  00:49:53,630 - #43 {
INFO  00:49:53,630 - #50 void
INFO  00:49:53,630 - #20 main
INFO  00:49:53,630 - #41 (
INFO  00:49:53,630 - #42 )
INFO  00:49:53,630 - #20 A
INFO  00:49:53,630 - #20 a
INFO  00:49:53,630 - #39 ;
INFO  00:49:53,631 - #20 C
INFO  00:49:53,631 - #20 c
INFO  00:49:53,631 - #39 ;
INFO  00:49:53,631 - #20 int
INFO  00:49:53,631 - #20 i
INFO  00:49:53,631 - #39 ;
INFO  00:49:53,631 - #20 int
INFO  00:49:53,631 - #20 x
INFO  00:49:53,631 - #45 [
INFO  00:49:53,632 - #46 ]
INFO  00:49:53,632 - #39 ;
INFO  00:49:53,632 - #20 char
INFO  00:49:53,632 - #20 ch
INFO  00:49:53,632 - #39 ;
INFO  00:49:53,632 - #43 {
INFO  00:49:53,632 - #20 a
INFO  00:49:53,633 - #36 =
INFO  00:49:53,633 - #12 new
INFO  00:49:53,633 - #20 A
INFO  00:49:53,633 - #39 ;
INFO  00:49:53,633 - #20 a
INFO  00:49:53,633 - #20 x
INFO  00:49:53,633 - #36 =
INFO  00:49:53,634 - #12 new
INFO  00:49:53,634 - #20 int
INFO  00:49:53,634 - #45 [
INFO  00:49:53,634 - #21 5
INFO  00:49:53,634 - #46 ]
INFO  00:49:53,634 - #39 ;
INFO  00:49:53,634 - #20 a
INFO  00:49:53,634 - #20 y
INFO  00:49:53,635 - #36 =
INFO  00:49:53,635 - #12 new
INFO  00:49:53,635 - #20 int
INFO  00:49:53,635 - #45 [
INFO  00:49:53,635 - #21 5
INFO  00:49:53,635 - #46 ]
INFO  00:49:53,635 - #39 ;
INFO  00:49:53,635 - #20 c
INFO  00:49:53,635 - #36 =
INFO  00:49:53,635 - #12 new
INFO  00:49:53,635 - #20 C
INFO  00:49:53,635 - #39 ;
INFO  00:49:53,636 - #20 c
INFO  00:49:53,636 - #20 theA
INFO  00:49:53,636 - #36 =
INFO  00:49:53,636 - #20 a
INFO  00:49:53,636 - #39 ;
INFO  00:49:53,636 - #20 c
INFO  00:49:53,636 - #20 x
INFO  00:49:53,636 - #36 =
INFO  00:49:53,636 - #12 new
INFO  00:49:53,636 - #20 int
INFO  00:49:53,637 - #45 [
INFO  00:49:53,637 - #21 5
INFO  00:49:53,637 - #46 ]
INFO  00:49:53,637 - #39 ;
INFO  00:49:53,637 - #20 x
INFO  00:49:53,637 - #36 =
INFO  00:49:53,637 - #12 new
INFO  00:49:53,638 - #20 int
INFO  00:49:53,638 - #45 [
INFO  00:49:53,638 - #21 3
INFO  00:49:53,638 - #46 ]
INFO  00:49:53,638 - #39 ;
INFO  00:49:53,638 - #13 read
INFO  00:49:53,638 - #41 (
INFO  00:49:53,639 - #20 c
INFO  00:49:53,639 - #20 i
INFO  00:49:53,639 - #42 )
INFO  00:49:53,639 - #39 ;
INFO  00:49:53,639 - #20 i
INFO  00:49:53,639 - #36 =
INFO  00:49:53,639 - #21 0
INFO  00:49:53,640 - #39 ;
INFO  00:49:53,640 - #10 do
INFO  00:49:53,640 - #43 {
INFO  00:49:53,640 - #13 read
INFO  00:49:53,640 - #41 (
INFO  00:49:53,640 - #20 c
INFO  00:49:53,640 - #20 x
INFO  00:49:53,641 - #45 [
INFO  00:49:53,641 - #20 i
INFO  00:49:53,641 - #46 ]
INFO  00:49:53,641 - #42 )
INFO  00:49:53,641 - #39 ;
INFO  00:49:53,641 - #13 read
INFO  00:49:53,641 - #41 (
INFO  00:49:53,642 - #20 c
INFO  00:49:53,642 - #20 theA
INFO  00:49:53,642 - #20 x
INFO  00:49:53,642 - #45 [
INFO  00:49:53,642 - #20 i
INFO  00:49:53,642 - #46 ]
INFO  00:49:53,642 - #42 )
INFO  00:49:53,642 - #39 ;
INFO  00:49:53,643 - #20 i
INFO  00:49:53,643 - #28 ++
INFO  00:49:53,643 - #39 ;
INFO  00:49:53,643 - #21 9
INFO  00:49:53,643 - #27 /
INFO  00:49:53,643 - #21 13
INFO  00:49:53,643 - #44 }
INFO  00:49:53,643 - #11 while
INFO  00:49:53,644 - #41 (
INFO  00:49:53,644 - #20 i
INFO  00:49:53,644 - #21 5
INFO  00:49:53,644 - #42 )
INFO  00:49:53,644 - #39 ;
INFO  00:49:53,644 - #2 print
INFO  00:49:53,644 - #41 (
INFO  00:49:53,644 - #20 c
INFO  00:49:53,645 - #20 getValue
INFO  00:49:53,645 - #41 (
INFO  00:49:53,645 - #20 c
INFO  00:49:53,645 - #20 theA
INFO  00:49:53,645 - #20 x
INFO  00:49:53,645 - #45 [
INFO  00:49:53,645 - #21 0
INFO  00:49:53,645 - #46 ]
INFO  00:49:53,646 - #42 )
INFO  00:49:53,646 - #42 )
INFO  00:49:53,646 - #39 ;
INFO  00:49:53,646 - #20 c
INFO  00:49:53,646 - #20 m
INFO  00:49:53,646 - #41 (
INFO  00:49:53,646 - #42 )
INFO  00:49:53,646 - #39 ;
INFO  00:49:53,647 - #44 }
INFO  00:49:53,647 - #44 }
