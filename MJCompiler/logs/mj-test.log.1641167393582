INFO  00:48:38,700 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  00:48:38,713 - #1 program
INFO  00:48:38,713 - #20 Program
INFO  00:48:38,714 - #5 class
INFO  00:48:38,714 - #20 A
INFO  00:48:38,714 - #43 {
INFO  00:48:38,714 - #20 int
INFO  00:48:38,714 - #20 x
INFO  00:48:38,715 - #45 [
INFO  00:48:38,715 - #46 ]
INFO  00:48:38,715 - #40 ,
INFO  00:48:38,715 - #20 y
INFO  00:48:38,715 - #45 [
INFO  00:48:38,716 - #46 ]
INFO  00:48:38,716 - #39 ;
INFO  00:48:38,716 - #44 }
INFO  00:48:38,716 - #8 const
INFO  00:48:38,716 - #20 int
INFO  00:48:38,716 - #20 pi
INFO  00:48:38,717 - #36 =
INFO  00:48:38,717 - #21 3
INFO  00:48:38,717 - #40 ,
INFO  00:48:38,717 - #20 e
INFO  00:48:38,718 - #36 =
INFO  00:48:38,718 - #21 2
INFO  00:48:38,718 - #39 ;
INFO  00:48:38,718 - #5 class
INFO  00:48:38,719 - #20 B
INFO  00:48:38,719 - #14 extends
INFO  00:48:38,719 - #20 A
INFO  00:48:38,719 - #43 {
INFO  00:48:38,719 - #20 int
INFO  00:48:38,719 - #20 i
INFO  00:48:38,720 - #39 ;
INFO  00:48:38,720 - #43 {
INFO  00:48:38,720 - #20 int
INFO  00:48:38,720 - #20 getValue
INFO  00:48:38,720 - #41 (
INFO  00:48:38,720 - #20 int
INFO  00:48:38,721 - #20 a
INFO  00:48:38,721 - #42 )
INFO  00:48:38,721 - #20 int
INFO  00:48:38,721 - #20 b
INFO  00:48:38,721 - #39 ;
INFO  00:48:38,721 - #20 bool
INFO  00:48:38,722 - #20 c
INFO  00:48:38,722 - #39 ;
INFO  00:48:38,722 - #43 {
INFO  00:48:38,722 - #3 return
INFO  00:48:38,722 - #16 this
INFO  00:48:38,723 - #20 i
INFO  00:48:38,723 - #24 +
INFO  00:48:38,723 - #16 this
INFO  00:48:38,723 - #20 x
INFO  00:48:38,724 - #45 [
INFO  00:48:38,724 - #21 0
INFO  00:48:38,724 - #46 ]
INFO  00:48:38,724 - #24 +
INFO  00:48:38,725 - #20 a
INFO  00:48:38,725 - #39 ;
INFO  00:48:38,725 - #44 }
INFO  00:48:38,725 - #50 void
INFO  00:48:38,725 - #20 m
INFO  00:48:38,725 - #41 (
INFO  00:48:38,726 - #42 )
INFO  00:48:38,726 - #43 {
INFO  00:48:38,726 - #44 }
INFO  00:48:38,726 - #44 }
INFO  00:48:38,726 - #44 }
INFO  00:48:38,727 - #5 class
INFO  00:48:38,727 - #20 C
INFO  00:48:38,727 - #14 extends
INFO  00:48:38,727 - #20 B
INFO  00:48:38,727 - #43 {
INFO  00:48:38,727 - #20 A
INFO  00:48:38,728 - #20 theA
INFO  00:48:38,728 - #39 ;
INFO  00:48:38,728 - #20 int
INFO  00:48:38,728 - #20 a
INFO  00:48:38,728 - #39 ;
INFO  00:48:38,729 - #44 }
INFO  00:48:38,729 - #43 {
INFO  00:48:38,729 - #50 void
INFO  00:48:38,729 - #20 main
INFO  00:48:38,729 - #41 (
INFO  00:48:38,729 - #42 )
INFO  00:48:38,729 - #20 A
INFO  00:48:38,730 - #20 a
INFO  00:48:38,730 - #39 ;
INFO  00:48:38,730 - #20 C
INFO  00:48:38,730 - #20 c
INFO  00:48:38,730 - #39 ;
INFO  00:48:38,731 - #20 int
INFO  00:48:38,731 - #20 i
INFO  00:48:38,731 - #39 ;
INFO  00:48:38,731 - #20 int
INFO  00:48:38,731 - #20 x
INFO  00:48:38,731 - #45 [
INFO  00:48:38,731 - #46 ]
INFO  00:48:38,732 - #39 ;
INFO  00:48:38,732 - #20 char
INFO  00:48:38,732 - #20 ch
INFO  00:48:38,732 - #39 ;
INFO  00:48:38,732 - #43 {
INFO  00:48:38,732 - #20 a
INFO  00:48:38,732 - #36 =
INFO  00:48:38,733 - #12 new
INFO  00:48:38,733 - #20 A
INFO  00:48:38,733 - #39 ;
INFO  00:48:38,733 - #20 a
INFO  00:48:38,733 - #20 x
INFO  00:48:38,733 - #36 =
INFO  00:48:38,734 - #12 new
INFO  00:48:38,734 - #20 int
INFO  00:48:38,734 - #45 [
INFO  00:48:38,734 - #21 5
INFO  00:48:38,734 - #46 ]
INFO  00:48:38,734 - #39 ;
INFO  00:48:38,734 - #20 a
INFO  00:48:38,735 - #20 y
INFO  00:48:38,735 - #36 =
INFO  00:48:38,735 - #12 new
INFO  00:48:38,735 - #20 int
INFO  00:48:38,735 - #45 [
INFO  00:48:38,735 - #21 5
INFO  00:48:38,735 - #46 ]
INFO  00:48:38,736 - #39 ;
INFO  00:48:38,736 - #20 c
INFO  00:48:38,736 - #36 =
INFO  00:48:38,736 - #12 new
INFO  00:48:38,736 - #20 C
INFO  00:48:38,736 - #39 ;
INFO  00:48:38,736 - #20 c
INFO  00:48:38,737 - #20 theA
INFO  00:48:38,737 - #36 =
INFO  00:48:38,737 - #20 a
INFO  00:48:38,737 - #39 ;
INFO  00:48:38,737 - #20 c
INFO  00:48:38,737 - #20 x
INFO  00:48:38,737 - #36 =
INFO  00:48:38,737 - #12 new
INFO  00:48:38,737 - #20 int
INFO  00:48:38,738 - #45 [
INFO  00:48:38,738 - #21 5
INFO  00:48:38,738 - #46 ]
INFO  00:48:38,738 - #39 ;
INFO  00:48:38,738 - #20 x
INFO  00:48:38,738 - #36 =
INFO  00:48:38,738 - #12 new
INFO  00:48:38,739 - #20 int
INFO  00:48:38,739 - #45 [
INFO  00:48:38,739 - #21 3
INFO  00:48:38,739 - #46 ]
INFO  00:48:38,739 - #39 ;
INFO  00:48:38,739 - #13 read
INFO  00:48:38,740 - #41 (
INFO  00:48:38,740 - #20 c
INFO  00:48:38,740 - #20 i
INFO  00:48:38,740 - #42 )
INFO  00:48:38,740 - #39 ;
INFO  00:48:38,740 - #20 i
INFO  00:48:38,741 - #36 =
INFO  00:48:38,741 - #21 0
INFO  00:48:38,741 - #39 ;
INFO  00:48:38,741 - #10 do
INFO  00:48:38,741 - #43 {
INFO  00:48:38,741 - #13 read
INFO  00:48:38,742 - #41 (
INFO  00:48:38,742 - #20 c
INFO  00:48:38,742 - #20 x
INFO  00:48:38,742 - #45 [
INFO  00:48:38,742 - #20 i
INFO  00:48:38,743 - #46 ]
INFO  00:48:38,743 - #42 )
INFO  00:48:38,743 - #39 ;
INFO  00:48:38,743 - #13 read
INFO  00:48:38,743 - #41 (
INFO  00:48:38,743 - #20 c
INFO  00:48:38,743 - #20 theA
INFO  00:48:38,744 - #20 x
INFO  00:48:38,744 - #45 [
INFO  00:48:38,744 - #20 i
INFO  00:48:38,744 - #46 ]
INFO  00:48:38,744 - #42 )
INFO  00:48:38,744 - #39 ;
INFO  00:48:38,744 - #20 i
INFO  00:48:38,744 - #28 ++
INFO  00:48:38,745 - #39 ;
INFO  00:48:38,745 - #21 9
INFO  00:48:38,745 - #27 /
INFO  00:48:38,745 - #21 13
INFO  00:48:38,745 - #44 }
INFO  00:48:38,745 - #11 while
INFO  00:48:38,745 - #41 (
INFO  00:48:38,745 - #20 i
INFO  00:48:38,746 - #21 5
INFO  00:48:38,746 - #42 )
INFO  00:48:38,746 - #39 ;
INFO  00:48:38,746 - #2 print
INFO  00:48:38,746 - #41 (
INFO  00:48:38,746 - #20 c
INFO  00:48:38,746 - #20 getValue
INFO  00:48:38,746 - #41 (
INFO  00:48:38,746 - #20 c
INFO  00:48:38,747 - #20 theA
INFO  00:48:38,747 - #20 x
INFO  00:48:38,747 - #45 [
INFO  00:48:38,747 - #21 0
INFO  00:48:38,747 - #46 ]
INFO  00:48:38,747 - #42 )
INFO  00:48:38,747 - #42 )
INFO  00:48:38,747 - #39 ;
INFO  00:48:38,747 - #20 c
INFO  00:48:38,747 - #20 m
INFO  00:48:38,747 - #41 (
INFO  00:48:38,747 - #42 )
INFO  00:48:38,748 - #39 ;
INFO  00:48:38,748 - #44 }
INFO  00:48:38,748 - #44 }
