INFO  00:54:32,199 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  00:54:32,207 - #1 program
INFO  00:54:32,207 - #20 Program
INFO  00:54:32,207 - #5 class
INFO  00:54:32,208 - #20 A
INFO  00:54:32,208 - #43 {
INFO  00:54:32,208 - #20 int
INFO  00:54:32,208 - #20 x
INFO  00:54:32,208 - #45 [
INFO  00:54:32,208 - #46 ]
INFO  00:54:32,208 - #40 ,
INFO  00:54:32,208 - #20 y
INFO  00:54:32,208 - #45 [
INFO  00:54:32,209 - #46 ]
INFO  00:54:32,209 - #39 ;
INFO  00:54:32,209 - #44 }
INFO  00:54:32,209 - #8 const
INFO  00:54:32,209 - #20 int
INFO  00:54:32,209 - #20 pi
INFO  00:54:32,209 - #36 =
INFO  00:54:32,209 - #21 3
INFO  00:54:32,210 - #40 ,
INFO  00:54:32,210 - #20 e
INFO  00:54:32,210 - #36 =
INFO  00:54:32,210 - #21 2
INFO  00:54:32,210 - #39 ;
INFO  00:54:32,210 - #5 class
INFO  00:54:32,211 - #20 B
INFO  00:54:32,211 - #14 extends
INFO  00:54:32,211 - #20 A
INFO  00:54:32,211 - #43 {
INFO  00:54:32,211 - #20 int
INFO  00:54:32,211 - #20 i
INFO  00:54:32,211 - #39 ;
INFO  00:54:32,211 - #43 {
INFO  00:54:32,211 - #20 int
INFO  00:54:32,211 - #20 getValue
INFO  00:54:32,212 - #41 (
INFO  00:54:32,212 - #20 int
INFO  00:54:32,212 - #20 a
INFO  00:54:32,212 - #42 )
INFO  00:54:32,212 - #20 int
INFO  00:54:32,212 - #20 b
INFO  00:54:32,212 - #39 ;
INFO  00:54:32,212 - #20 bool
INFO  00:54:32,212 - #20 c
INFO  00:54:32,212 - #39 ;
INFO  00:54:32,213 - #43 {
INFO  00:54:32,213 - #3 return
INFO  00:54:32,213 - #16 this
INFO  00:54:32,213 - #20 i
INFO  00:54:32,213 - #24 +
INFO  00:54:32,213 - #16 this
INFO  00:54:32,213 - #20 x
INFO  00:54:32,213 - #45 [
INFO  00:54:32,214 - #21 0
INFO  00:54:32,214 - #46 ]
INFO  00:54:32,214 - #24 +
INFO  00:54:32,214 - #20 a
INFO  00:54:32,214 - #39 ;
INFO  00:54:32,214 - #44 }
INFO  00:54:32,214 - #50 void
INFO  00:54:32,214 - #20 m
INFO  00:54:32,214 - #41 (
INFO  00:54:32,215 - #42 )
INFO  00:54:32,215 - #43 {
INFO  00:54:32,215 - #44 }
INFO  00:54:32,215 - #44 }
INFO  00:54:32,215 - #44 }
INFO  00:54:32,215 - #5 class
INFO  00:54:32,215 - #20 C
INFO  00:54:32,215 - #14 extends
INFO  00:54:32,215 - #20 B
INFO  00:54:32,216 - #43 {
INFO  00:54:32,216 - #20 A
INFO  00:54:32,216 - #20 theA
INFO  00:54:32,216 - #39 ;
INFO  00:54:32,216 - #20 int
INFO  00:54:32,216 - #20 a
INFO  00:54:32,216 - #39 ;
INFO  00:54:32,216 - #44 }
INFO  00:54:32,216 - #43 {
INFO  00:54:32,216 - #50 void
INFO  00:54:32,217 - #20 main
INFO  00:54:32,217 - #41 (
INFO  00:54:32,217 - #42 )
INFO  00:54:32,217 - #20 A
INFO  00:54:32,217 - #20 a
INFO  00:54:32,217 - #39 ;
INFO  00:54:32,217 - #20 C
INFO  00:54:32,217 - #20 c
INFO  00:54:32,217 - #39 ;
INFO  00:54:32,217 - #20 int
INFO  00:54:32,218 - #20 i
INFO  00:54:32,218 - #39 ;
INFO  00:54:32,218 - #20 int
INFO  00:54:32,218 - #20 x
INFO  00:54:32,219 - #45 [
INFO  00:54:32,219 - #46 ]
INFO  00:54:32,219 - #39 ;
INFO  00:54:32,219 - #20 char
INFO  00:54:32,219 - #20 ch
INFO  00:54:32,219 - #39 ;
INFO  00:54:32,219 - #43 {
INFO  00:54:32,219 - #20 a
INFO  00:54:32,219 - #36 =
INFO  00:54:32,219 - #12 new
INFO  00:54:32,220 - #20 A
INFO  00:54:32,220 - #39 ;
INFO  00:54:32,220 - #20 a
INFO  00:54:32,220 - #20 x
INFO  00:54:32,220 - #36 =
INFO  00:54:32,220 - #12 new
INFO  00:54:32,220 - #20 int
INFO  00:54:32,220 - #45 [
INFO  00:54:32,220 - #21 5
INFO  00:54:32,220 - #46 ]
INFO  00:54:32,220 - #39 ;
INFO  00:54:32,220 - #20 a
INFO  00:54:32,221 - #20 y
INFO  00:54:32,221 - #36 =
INFO  00:54:32,221 - #12 new
INFO  00:54:32,221 - #20 int
INFO  00:54:32,221 - #45 [
INFO  00:54:32,221 - #21 5
INFO  00:54:32,221 - #46 ]
INFO  00:54:32,221 - #39 ;
INFO  00:54:32,221 - #20 c
INFO  00:54:32,221 - #36 =
INFO  00:54:32,222 - #12 new
INFO  00:54:32,222 - #20 C
INFO  00:54:32,222 - #39 ;
INFO  00:54:32,222 - #20 c
INFO  00:54:32,222 - #20 theA
INFO  00:54:32,222 - #36 =
INFO  00:54:32,222 - #20 a
INFO  00:54:32,222 - #39 ;
INFO  00:54:32,222 - #20 c
INFO  00:54:32,222 - #20 x
INFO  00:54:32,222 - #36 =
INFO  00:54:32,223 - #12 new
INFO  00:54:32,223 - #20 int
INFO  00:54:32,223 - #45 [
INFO  00:54:32,223 - #21 5
INFO  00:54:32,223 - #46 ]
INFO  00:54:32,223 - #39 ;
INFO  00:54:32,223 - #20 x
INFO  00:54:32,223 - #36 =
INFO  00:54:32,223 - #12 new
INFO  00:54:32,223 - #20 int
INFO  00:54:32,223 - #45 [
INFO  00:54:32,224 - #21 3
INFO  00:54:32,224 - #46 ]
INFO  00:54:32,224 - #39 ;
INFO  00:54:32,224 - #13 read
INFO  00:54:32,224 - #41 (
INFO  00:54:32,224 - #20 c
INFO  00:54:32,224 - #20 i
INFO  00:54:32,224 - #42 )
INFO  00:54:32,224 - #39 ;
INFO  00:54:32,224 - #20 i
INFO  00:54:32,224 - #36 =
INFO  00:54:32,225 - #21 0
INFO  00:54:32,225 - #39 ;
INFO  00:54:32,225 - #10 do
INFO  00:54:32,225 - #43 {
INFO  00:54:32,225 - #13 read
INFO  00:54:32,225 - #41 (
INFO  00:54:32,225 - #20 c
INFO  00:54:32,225 - #20 x
INFO  00:54:32,225 - #45 [
INFO  00:54:32,225 - #20 i
INFO  00:54:32,225 - #46 ]
INFO  00:54:32,226 - #42 )
INFO  00:54:32,226 - #39 ;
INFO  00:54:32,226 - #13 read
INFO  00:54:32,226 - #41 (
INFO  00:54:32,226 - #20 c
INFO  00:54:32,226 - #20 theA
INFO  00:54:32,226 - #20 x
INFO  00:54:32,226 - #45 [
INFO  00:54:32,226 - #20 i
INFO  00:54:32,226 - #46 ]
INFO  00:54:32,227 - #42 )
INFO  00:54:32,227 - #39 ;
INFO  00:54:32,227 - #20 i
INFO  00:54:32,227 - #28 ++
INFO  00:54:32,227 - #39 ;
INFO  00:54:32,227 - #21 9
INFO  00:54:32,227 - #27 /
INFO  00:54:32,227 - #21 13
INFO  00:54:32,227 - #44 }
INFO  00:54:32,227 - #11 while
INFO  00:54:32,227 - #41 (
INFO  00:54:32,227 - #20 i
INFO  00:54:32,228 - #21 5
INFO  00:54:32,228 - #42 )
INFO  00:54:32,228 - #39 ;
INFO  00:54:32,228 - #2 print
INFO  00:54:32,228 - #41 (
INFO  00:54:32,228 - #20 c
INFO  00:54:32,228 - #20 getValue
INFO  00:54:32,228 - #41 (
INFO  00:54:32,228 - #20 c
INFO  00:54:32,229 - #20 theA
INFO  00:54:32,229 - #20 x
INFO  00:54:32,229 - #45 [
INFO  00:54:32,229 - #21 0
INFO  00:54:32,229 - #46 ]
INFO  00:54:32,229 - #42 )
INFO  00:54:32,229 - #42 )
INFO  00:54:32,229 - #39 ;
INFO  00:54:32,229 - #20 c
INFO  00:54:32,230 - #20 m
INFO  00:54:32,230 - #41 (
INFO  00:54:32,230 - #42 )
INFO  00:54:32,230 - #39 ;
INFO  00:54:32,230 - #44 }
INFO  00:54:32,230 - #44 }
