INFO  01:02:31,296 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  01:02:31,304 - #1 program
INFO  01:02:31,304 - #20 Program
INFO  01:02:31,304 - #5 class
INFO  01:02:31,304 - #20 A
INFO  01:02:31,304 - #43 {
INFO  01:02:31,304 - #20 int
INFO  01:02:31,305 - #20 x
INFO  01:02:31,305 - #45 [
INFO  01:02:31,305 - #46 ]
INFO  01:02:31,305 - #40 ,
INFO  01:02:31,305 - #20 y
INFO  01:02:31,305 - #45 [
INFO  01:02:31,305 - #46 ]
INFO  01:02:31,305 - #39 ;
INFO  01:02:31,306 - #44 }
INFO  01:02:31,306 - #8 const
INFO  01:02:31,306 - #20 int
INFO  01:02:31,306 - #20 pi
INFO  01:02:31,306 - #36 =
INFO  01:02:31,306 - #21 3
INFO  01:02:31,306 - #40 ,
INFO  01:02:31,307 - #20 e
INFO  01:02:31,307 - #36 =
INFO  01:02:31,307 - #21 2
INFO  01:02:31,307 - #39 ;
INFO  01:02:31,308 - #5 class
INFO  01:02:31,308 - #20 B
INFO  01:02:31,308 - #14 extends
INFO  01:02:31,308 - #20 A
INFO  01:02:31,308 - #43 {
INFO  01:02:31,308 - #20 int
INFO  01:02:31,308 - #20 i
INFO  01:02:31,308 - #39 ;
INFO  01:02:31,308 - #43 {
INFO  01:02:31,309 - #20 int
INFO  01:02:31,309 - #20 getValue
INFO  01:02:31,309 - #41 (
INFO  01:02:31,309 - #20 int
INFO  01:02:31,309 - #20 a
INFO  01:02:31,309 - #42 )
INFO  01:02:31,309 - #20 int
INFO  01:02:31,309 - #20 b
INFO  01:02:31,309 - #39 ;
INFO  01:02:31,309 - #20 bool
INFO  01:02:31,310 - #20 c
INFO  01:02:31,310 - #39 ;
INFO  01:02:31,310 - #43 {
INFO  01:02:31,310 - #3 return
INFO  01:02:31,310 - #16 this
INFO  01:02:31,310 - #20 i
INFO  01:02:31,310 - #24 +
INFO  01:02:31,310 - #16 this
INFO  01:02:31,311 - #20 x
INFO  01:02:31,311 - #45 [
INFO  01:02:31,311 - #21 0
INFO  01:02:31,311 - #46 ]
INFO  01:02:31,311 - #24 +
INFO  01:02:31,311 - #20 a
INFO  01:02:31,311 - #39 ;
INFO  01:02:31,311 - #44 }
INFO  01:02:31,312 - #50 void
INFO  01:02:31,312 - #20 m
INFO  01:02:31,312 - #41 (
INFO  01:02:31,312 - #42 )
INFO  01:02:31,312 - #43 {
INFO  01:02:31,312 - #44 }
INFO  01:02:31,312 - #44 }
INFO  01:02:31,312 - #44 }
INFO  01:02:31,313 - #5 class
INFO  01:02:31,313 - #20 C
INFO  01:02:31,313 - #14 extends
INFO  01:02:31,313 - #20 B
INFO  01:02:31,313 - #43 {
INFO  01:02:31,313 - #20 A
INFO  01:02:31,313 - #20 theA
INFO  01:02:31,313 - #39 ;
INFO  01:02:31,313 - #20 int
INFO  01:02:31,313 - #20 a
INFO  01:02:31,313 - #39 ;
INFO  01:02:31,314 - #44 }
INFO  01:02:31,314 - #43 {
INFO  01:02:31,314 - #50 void
INFO  01:02:31,314 - #20 main
INFO  01:02:31,314 - #41 (
INFO  01:02:31,314 - #42 )
INFO  01:02:31,314 - #20 A
INFO  01:02:31,314 - #20 a
INFO  01:02:31,315 - #39 ;
INFO  01:02:31,315 - #20 C
INFO  01:02:31,315 - #20 c
INFO  01:02:31,315 - #39 ;
INFO  01:02:31,315 - #20 int
INFO  01:02:31,315 - #20 i
INFO  01:02:31,316 - #39 ;
INFO  01:02:31,316 - #20 int
INFO  01:02:31,316 - #20 x
INFO  01:02:31,316 - #45 [
INFO  01:02:31,316 - #46 ]
INFO  01:02:31,317 - #39 ;
INFO  01:02:31,317 - #20 char
INFO  01:02:31,317 - #20 ch
INFO  01:02:31,317 - #39 ;
INFO  01:02:31,317 - #43 {
INFO  01:02:31,317 - #20 a
INFO  01:02:31,317 - #36 =
INFO  01:02:31,318 - #12 new
INFO  01:02:31,318 - #20 A
INFO  01:02:31,318 - #39 ;
INFO  01:02:31,318 - #20 a
INFO  01:02:31,318 - #20 x
INFO  01:02:31,318 - #36 =
INFO  01:02:31,319 - #12 new
INFO  01:02:31,319 - #20 int
INFO  01:02:31,319 - #45 [
INFO  01:02:31,319 - #21 5
INFO  01:02:31,319 - #46 ]
INFO  01:02:31,319 - #39 ;
INFO  01:02:31,320 - #20 a
INFO  01:02:31,320 - #20 y
INFO  01:02:31,320 - #36 =
INFO  01:02:31,320 - #12 new
INFO  01:02:31,320 - #20 int
INFO  01:02:31,320 - #45 [
INFO  01:02:31,321 - #21 5
INFO  01:02:31,321 - #46 ]
INFO  01:02:31,321 - #39 ;
INFO  01:02:31,321 - #20 c
INFO  01:02:31,321 - #36 =
INFO  01:02:31,321 - #12 new
INFO  01:02:31,321 - #20 C
INFO  01:02:31,321 - #39 ;
INFO  01:02:31,321 - #20 c
INFO  01:02:31,322 - #20 theA
INFO  01:02:31,322 - #36 =
INFO  01:02:31,322 - #20 a
INFO  01:02:31,322 - #39 ;
INFO  01:02:31,322 - #20 c
INFO  01:02:31,322 - #20 x
INFO  01:02:31,322 - #36 =
INFO  01:02:31,322 - #12 new
INFO  01:02:31,322 - #20 int
INFO  01:02:31,322 - #45 [
INFO  01:02:31,323 - #21 5
INFO  01:02:31,323 - #46 ]
INFO  01:02:31,323 - #39 ;
INFO  01:02:31,323 - #20 x
INFO  01:02:31,323 - #36 =
INFO  01:02:31,323 - #12 new
INFO  01:02:31,323 - #20 int
INFO  01:02:31,323 - #45 [
INFO  01:02:31,323 - #21 3
INFO  01:02:31,323 - #46 ]
INFO  01:02:31,324 - #39 ;
INFO  01:02:31,324 - #13 read
INFO  01:02:31,324 - #41 (
INFO  01:02:31,324 - #20 c
INFO  01:02:31,324 - #20 i
INFO  01:02:31,324 - #42 )
INFO  01:02:31,324 - #39 ;
INFO  01:02:31,324 - #20 i
INFO  01:02:31,325 - #36 =
INFO  01:02:31,325 - #21 0
INFO  01:02:31,325 - #39 ;
INFO  01:02:31,325 - #10 do
INFO  01:02:31,325 - #43 {
INFO  01:02:31,325 - #13 read
INFO  01:02:31,325 - #41 (
INFO  01:02:31,325 - #20 c
INFO  01:02:31,325 - #20 x
INFO  01:02:31,325 - #45 [
INFO  01:02:31,325 - #20 i
INFO  01:02:31,325 - #46 ]
INFO  01:02:31,325 - #42 )
INFO  01:02:31,326 - #39 ;
INFO  01:02:31,326 - #13 read
INFO  01:02:31,326 - #41 (
INFO  01:02:31,326 - #20 c
INFO  01:02:31,326 - #20 theA
INFO  01:02:31,326 - #20 x
INFO  01:02:31,326 - #45 [
INFO  01:02:31,326 - #20 i
INFO  01:02:31,326 - #46 ]
INFO  01:02:31,326 - #42 )
INFO  01:02:31,326 - #39 ;
INFO  01:02:31,326 - #20 i
INFO  01:02:31,326 - #28 ++
INFO  01:02:31,326 - #39 ;
INFO  01:02:31,327 - #21 9
INFO  01:02:31,327 - #27 /
INFO  01:02:31,327 - #21 13
INFO  01:02:31,327 - #44 }
INFO  01:02:31,327 - #11 while
INFO  01:02:31,327 - #41 (
INFO  01:02:31,327 - #20 i
INFO  01:02:31,327 - #21 5
INFO  01:02:31,327 - #42 )
INFO  01:02:31,328 - #39 ;
INFO  01:02:31,328 - #2 print
INFO  01:02:31,328 - #41 (
INFO  01:02:31,328 - #20 c
INFO  01:02:31,328 - #20 getValue
INFO  01:02:31,328 - #41 (
INFO  01:02:31,328 - #20 c
INFO  01:02:31,329 - #20 theA
INFO  01:02:31,329 - #20 x
INFO  01:02:31,329 - #45 [
INFO  01:02:31,329 - #21 0
INFO  01:02:31,329 - #46 ]
INFO  01:02:31,329 - #42 )
INFO  01:02:31,329 - #42 )
INFO  01:02:31,330 - #39 ;
INFO  01:02:31,330 - #20 c
INFO  01:02:31,330 - #20 m
INFO  01:02:31,330 - #41 (
INFO  01:02:31,330 - #42 )
INFO  01:02:31,330 - #39 ;
INFO  01:02:31,330 - #44 }
INFO  01:02:31,331 - #44 }
