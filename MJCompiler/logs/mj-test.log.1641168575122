INFO  01:04:08,847 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  01:04:08,854 - #1 program
INFO  01:04:08,854 - #20 Program
INFO  01:04:08,855 - #5 class
INFO  01:04:08,855 - #20 A
INFO  01:04:08,855 - #43 {
INFO  01:04:08,855 - #20 int
INFO  01:04:08,855 - #20 x
INFO  01:04:08,855 - #45 [
INFO  01:04:08,855 - #46 ]
INFO  01:04:08,856 - #40 ,
INFO  01:04:08,856 - #20 y
INFO  01:04:08,856 - #45 [
INFO  01:04:08,856 - #46 ]
INFO  01:04:08,856 - #39 ;
INFO  01:04:08,857 - #44 }
INFO  01:04:08,857 - #8 const
INFO  01:04:08,857 - #20 int
INFO  01:04:08,857 - #20 pi
INFO  01:04:08,857 - #36 =
INFO  01:04:08,857 - #21 3
INFO  01:04:08,857 - #40 ,
INFO  01:04:08,857 - #20 e
INFO  01:04:08,858 - #36 =
INFO  01:04:08,858 - #21 2
INFO  01:04:08,858 - #39 ;
INFO  01:04:08,858 - #5 class
INFO  01:04:08,858 - #20 B
INFO  01:04:08,859 - #14 extends
INFO  01:04:08,859 - #20 A
INFO  01:04:08,859 - #43 {
INFO  01:04:08,859 - #20 int
INFO  01:04:08,859 - #20 i
INFO  01:04:08,859 - #39 ;
INFO  01:04:08,859 - #43 {
INFO  01:04:08,859 - #20 int
INFO  01:04:08,859 - #20 getValue
INFO  01:04:08,860 - #41 (
INFO  01:04:08,860 - #20 int
INFO  01:04:08,860 - #20 a
INFO  01:04:08,860 - #42 )
INFO  01:04:08,860 - #20 int
INFO  01:04:08,860 - #20 b
INFO  01:04:08,860 - #39 ;
INFO  01:04:08,860 - #20 bool
INFO  01:04:08,860 - #20 c
INFO  01:04:08,861 - #39 ;
INFO  01:04:08,861 - #43 {
INFO  01:04:08,861 - #3 return
INFO  01:04:08,861 - #16 this
INFO  01:04:08,861 - #20 i
INFO  01:04:08,861 - #24 +
INFO  01:04:08,861 - #16 this
INFO  01:04:08,862 - #20 x
INFO  01:04:08,862 - #45 [
INFO  01:04:08,862 - #21 0
INFO  01:04:08,862 - #46 ]
INFO  01:04:08,862 - #24 +
INFO  01:04:08,862 - #20 a
INFO  01:04:08,862 - #39 ;
INFO  01:04:08,862 - #44 }
INFO  01:04:08,862 - #50 void
INFO  01:04:08,863 - #20 m
INFO  01:04:08,863 - #41 (
INFO  01:04:08,863 - #42 )
INFO  01:04:08,863 - #43 {
INFO  01:04:08,863 - #44 }
INFO  01:04:08,863 - #44 }
INFO  01:04:08,863 - #44 }
INFO  01:04:08,863 - #5 class
INFO  01:04:08,863 - #20 C
INFO  01:04:08,863 - #14 extends
INFO  01:04:08,863 - #20 B
INFO  01:04:08,864 - #43 {
INFO  01:04:08,864 - #20 A
INFO  01:04:08,864 - #20 theA
INFO  01:04:08,864 - #39 ;
INFO  01:04:08,864 - #20 int
INFO  01:04:08,864 - #20 a
INFO  01:04:08,864 - #39 ;
INFO  01:04:08,864 - #44 }
INFO  01:04:08,864 - #43 {
INFO  01:04:08,864 - #50 void
INFO  01:04:08,864 - #20 main
INFO  01:04:08,865 - #41 (
INFO  01:04:08,865 - #42 )
INFO  01:04:08,865 - #20 A
INFO  01:04:08,865 - #20 a
INFO  01:04:08,865 - #39 ;
INFO  01:04:08,865 - #20 C
INFO  01:04:08,865 - #20 c
INFO  01:04:08,865 - #39 ;
INFO  01:04:08,865 - #20 int
INFO  01:04:08,865 - #20 i
INFO  01:04:08,865 - #39 ;
INFO  01:04:08,865 - #20 int
INFO  01:04:08,866 - #20 x
INFO  01:04:08,866 - #45 [
INFO  01:04:08,866 - #46 ]
INFO  01:04:08,866 - #39 ;
INFO  01:04:08,866 - #20 char
INFO  01:04:08,866 - #20 ch
INFO  01:04:08,866 - #39 ;
INFO  01:04:08,866 - #43 {
INFO  01:04:08,866 - #20 a
INFO  01:04:08,866 - #36 =
INFO  01:04:08,867 - #12 new
INFO  01:04:08,867 - #20 A
INFO  01:04:08,867 - #39 ;
INFO  01:04:08,867 - #20 a
INFO  01:04:08,867 - #20 x
INFO  01:04:08,867 - #36 =
INFO  01:04:08,867 - #12 new
INFO  01:04:08,867 - #20 int
INFO  01:04:08,867 - #45 [
INFO  01:04:08,867 - #21 5
INFO  01:04:08,868 - #46 ]
INFO  01:04:08,868 - #39 ;
INFO  01:04:08,868 - #20 a
INFO  01:04:08,868 - #20 y
INFO  01:04:08,868 - #36 =
INFO  01:04:08,868 - #12 new
INFO  01:04:08,868 - #20 int
INFO  01:04:08,868 - #45 [
INFO  01:04:08,868 - #21 5
INFO  01:04:08,868 - #46 ]
INFO  01:04:08,868 - #39 ;
INFO  01:04:08,868 - #20 c
INFO  01:04:08,869 - #36 =
INFO  01:04:08,869 - #12 new
INFO  01:04:08,869 - #20 C
INFO  01:04:08,869 - #39 ;
INFO  01:04:08,869 - #20 c
INFO  01:04:08,869 - #20 theA
INFO  01:04:08,869 - #36 =
INFO  01:04:08,869 - #20 a
INFO  01:04:08,869 - #39 ;
INFO  01:04:08,869 - #20 c
INFO  01:04:08,869 - #20 x
INFO  01:04:08,869 - #36 =
INFO  01:04:08,870 - #12 new
INFO  01:04:08,870 - #20 int
INFO  01:04:08,870 - #45 [
INFO  01:04:08,870 - #21 5
INFO  01:04:08,870 - #46 ]
INFO  01:04:08,870 - #39 ;
INFO  01:04:08,870 - #20 x
INFO  01:04:08,870 - #36 =
INFO  01:04:08,870 - #12 new
INFO  01:04:08,870 - #20 int
INFO  01:04:08,870 - #45 [
INFO  01:04:08,870 - #21 3
INFO  01:04:08,871 - #46 ]
INFO  01:04:08,871 - #39 ;
INFO  01:04:08,871 - #13 read
INFO  01:04:08,871 - #41 (
INFO  01:04:08,871 - #20 c
INFO  01:04:08,871 - #20 i
INFO  01:04:08,871 - #42 )
INFO  01:04:08,871 - #39 ;
INFO  01:04:08,871 - #20 i
INFO  01:04:08,871 - #36 =
INFO  01:04:08,871 - #21 0
INFO  01:04:08,871 - #39 ;
INFO  01:04:08,872 - #10 do
INFO  01:04:08,872 - #43 {
INFO  01:04:08,872 - #13 read
INFO  01:04:08,872 - #41 (
INFO  01:04:08,872 - #20 c
INFO  01:04:08,872 - #20 x
INFO  01:04:08,872 - #45 [
INFO  01:04:08,872 - #20 i
INFO  01:04:08,872 - #46 ]
INFO  01:04:08,872 - #42 )
INFO  01:04:08,872 - #39 ;
INFO  01:04:08,872 - #13 read
INFO  01:04:08,873 - #41 (
INFO  01:04:08,873 - #20 c
INFO  01:04:08,873 - #20 theA
INFO  01:04:08,873 - #20 x
INFO  01:04:08,873 - #45 [
INFO  01:04:08,873 - #20 i
INFO  01:04:08,873 - #46 ]
INFO  01:04:08,873 - #42 )
INFO  01:04:08,873 - #39 ;
INFO  01:04:08,873 - #20 i
INFO  01:04:08,873 - #28 ++
INFO  01:04:08,874 - #39 ;
INFO  01:04:08,874 - #21 9
INFO  01:04:08,874 - #27 /
INFO  01:04:08,874 - #21 13
INFO  01:04:08,874 - #44 }
INFO  01:04:08,874 - #11 while
INFO  01:04:08,874 - #41 (
INFO  01:04:08,874 - #20 i
INFO  01:04:08,874 - #21 5
INFO  01:04:08,874 - #42 )
INFO  01:04:08,874 - #39 ;
INFO  01:04:08,875 - #2 print
INFO  01:04:08,875 - #41 (
INFO  01:04:08,875 - #20 c
INFO  01:04:08,875 - #20 getValue
INFO  01:04:08,875 - #41 (
INFO  01:04:08,875 - #20 c
INFO  01:04:08,875 - #20 theA
INFO  01:04:08,875 - #20 x
INFO  01:04:08,875 - #45 [
INFO  01:04:08,875 - #21 0
INFO  01:04:08,875 - #46 ]
INFO  01:04:08,875 - #42 )
INFO  01:04:08,876 - #42 )
INFO  01:04:08,876 - #39 ;
INFO  01:04:08,876 - #20 c
INFO  01:04:08,876 - #20 m
INFO  01:04:08,876 - #41 (
INFO  01:04:08,876 - #42 )
INFO  01:04:08,876 - #39 ;
INFO  01:04:08,876 - #44 }
INFO  01:04:08,876 - #44 }
