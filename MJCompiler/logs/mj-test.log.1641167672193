INFO  00:53:23,071 - Compiling source file: C:\Users\Luka\Desktop\projekat pp\MJCompiler\test\program.mj
INFO  00:53:23,079 - #1 program
INFO  00:53:23,079 - #20 Program
INFO  00:53:23,079 - #5 class
INFO  00:53:23,080 - #20 A
INFO  00:53:23,080 - #43 {
INFO  00:53:23,080 - #20 int
INFO  00:53:23,080 - #20 x
INFO  00:53:23,080 - #45 [
INFO  00:53:23,080 - #46 ]
INFO  00:53:23,080 - #40 ,
INFO  00:53:23,081 - #20 y
INFO  00:53:23,081 - #45 [
INFO  00:53:23,081 - #46 ]
INFO  00:53:23,081 - #39 ;
INFO  00:53:23,081 - #44 }
INFO  00:53:23,081 - #8 const
INFO  00:53:23,082 - #20 int
INFO  00:53:23,082 - #20 pi
INFO  00:53:23,082 - #36 =
INFO  00:53:23,082 - #21 3
INFO  00:53:23,082 - #40 ,
INFO  00:53:23,082 - #20 e
INFO  00:53:23,083 - #36 =
INFO  00:53:23,083 - #21 2
INFO  00:53:23,083 - #39 ;
INFO  00:53:23,083 - #5 class
INFO  00:53:23,083 - #20 B
INFO  00:53:23,083 - #14 extends
INFO  00:53:23,083 - #20 A
INFO  00:53:23,083 - #43 {
INFO  00:53:23,084 - #20 int
INFO  00:53:23,084 - #20 i
INFO  00:53:23,084 - #39 ;
INFO  00:53:23,084 - #43 {
INFO  00:53:23,084 - #20 int
INFO  00:53:23,084 - #20 getValue
INFO  00:53:23,084 - #41 (
INFO  00:53:23,085 - #20 int
INFO  00:53:23,085 - #20 a
INFO  00:53:23,085 - #42 )
INFO  00:53:23,085 - #20 int
INFO  00:53:23,085 - #20 b
INFO  00:53:23,085 - #39 ;
INFO  00:53:23,085 - #20 bool
INFO  00:53:23,085 - #20 c
INFO  00:53:23,085 - #39 ;
INFO  00:53:23,085 - #43 {
INFO  00:53:23,086 - #3 return
INFO  00:53:23,086 - #16 this
INFO  00:53:23,086 - #20 i
INFO  00:53:23,086 - #24 +
INFO  00:53:23,086 - #16 this
INFO  00:53:23,086 - #20 x
INFO  00:53:23,087 - #45 [
INFO  00:53:23,087 - #21 0
INFO  00:53:23,087 - #46 ]
INFO  00:53:23,087 - #24 +
INFO  00:53:23,087 - #20 a
INFO  00:53:23,087 - #39 ;
INFO  00:53:23,087 - #44 }
INFO  00:53:23,087 - #50 void
INFO  00:53:23,087 - #20 m
INFO  00:53:23,088 - #41 (
INFO  00:53:23,088 - #42 )
INFO  00:53:23,088 - #43 {
INFO  00:53:23,088 - #44 }
INFO  00:53:23,088 - #44 }
INFO  00:53:23,088 - #44 }
INFO  00:53:23,088 - #5 class
INFO  00:53:23,088 - #20 C
INFO  00:53:23,088 - #14 extends
INFO  00:53:23,088 - #20 B
INFO  00:53:23,089 - #43 {
INFO  00:53:23,089 - #20 A
INFO  00:53:23,089 - #20 theA
INFO  00:53:23,089 - #39 ;
INFO  00:53:23,089 - #20 int
INFO  00:53:23,089 - #20 a
INFO  00:53:23,089 - #39 ;
INFO  00:53:23,089 - #44 }
INFO  00:53:23,089 - #43 {
INFO  00:53:23,090 - #50 void
INFO  00:53:23,090 - #20 main
INFO  00:53:23,090 - #41 (
INFO  00:53:23,090 - #42 )
INFO  00:53:23,090 - #20 A
INFO  00:53:23,090 - #20 a
INFO  00:53:23,090 - #39 ;
INFO  00:53:23,091 - #20 C
INFO  00:53:23,091 - #20 c
INFO  00:53:23,091 - #39 ;
INFO  00:53:23,091 - #20 int
INFO  00:53:23,091 - #20 i
INFO  00:53:23,091 - #39 ;
INFO  00:53:23,092 - #20 int
INFO  00:53:23,092 - #20 x
INFO  00:53:23,092 - #45 [
INFO  00:53:23,092 - #46 ]
INFO  00:53:23,092 - #39 ;
INFO  00:53:23,092 - #20 char
INFO  00:53:23,092 - #20 ch
INFO  00:53:23,093 - #39 ;
INFO  00:53:23,093 - #43 {
INFO  00:53:23,093 - #20 a
INFO  00:53:23,093 - #36 =
INFO  00:53:23,093 - #12 new
INFO  00:53:23,093 - #20 A
INFO  00:53:23,093 - #39 ;
INFO  00:53:23,093 - #20 a
INFO  00:53:23,094 - #20 x
INFO  00:53:23,094 - #36 =
INFO  00:53:23,094 - #12 new
INFO  00:53:23,094 - #20 int
INFO  00:53:23,094 - #45 [
INFO  00:53:23,094 - #21 5
INFO  00:53:23,094 - #46 ]
INFO  00:53:23,095 - #39 ;
INFO  00:53:23,095 - #20 a
INFO  00:53:23,095 - #20 y
INFO  00:53:23,095 - #36 =
INFO  00:53:23,095 - #12 new
INFO  00:53:23,095 - #20 int
INFO  00:53:23,095 - #45 [
INFO  00:53:23,096 - #21 5
INFO  00:53:23,096 - #46 ]
INFO  00:53:23,096 - #39 ;
INFO  00:53:23,096 - #20 c
INFO  00:53:23,096 - #36 =
INFO  00:53:23,096 - #12 new
INFO  00:53:23,096 - #20 C
INFO  00:53:23,096 - #39 ;
INFO  00:53:23,096 - #20 c
INFO  00:53:23,096 - #20 theA
INFO  00:53:23,096 - #36 =
INFO  00:53:23,097 - #20 a
INFO  00:53:23,097 - #39 ;
INFO  00:53:23,097 - #20 c
INFO  00:53:23,097 - #20 x
INFO  00:53:23,097 - #36 =
INFO  00:53:23,097 - #12 new
INFO  00:53:23,097 - #20 int
INFO  00:53:23,097 - #45 [
INFO  00:53:23,097 - #21 5
INFO  00:53:23,097 - #46 ]
INFO  00:53:23,097 - #39 ;
INFO  00:53:23,098 - #20 x
INFO  00:53:23,098 - #36 =
INFO  00:53:23,098 - #12 new
INFO  00:53:23,098 - #20 int
INFO  00:53:23,098 - #45 [
INFO  00:53:23,098 - #21 3
INFO  00:53:23,098 - #46 ]
INFO  00:53:23,098 - #39 ;
INFO  00:53:23,098 - #13 read
INFO  00:53:23,098 - #41 (
INFO  00:53:23,098 - #20 c
INFO  00:53:23,099 - #20 i
INFO  00:53:23,099 - #42 )
INFO  00:53:23,099 - #39 ;
INFO  00:53:23,099 - #20 i
INFO  00:53:23,099 - #36 =
INFO  00:53:23,099 - #21 0
INFO  00:53:23,099 - #39 ;
INFO  00:53:23,099 - #10 do
INFO  00:53:23,100 - #43 {
INFO  00:53:23,100 - #13 read
INFO  00:53:23,100 - #41 (
INFO  00:53:23,100 - #20 c
INFO  00:53:23,100 - #20 x
INFO  00:53:23,100 - #45 [
INFO  00:53:23,100 - #20 i
INFO  00:53:23,100 - #46 ]
INFO  00:53:23,100 - #42 )
INFO  00:53:23,100 - #39 ;
INFO  00:53:23,101 - #13 read
INFO  00:53:23,101 - #41 (
INFO  00:53:23,101 - #20 c
INFO  00:53:23,101 - #20 theA
INFO  00:53:23,101 - #20 x
INFO  00:53:23,101 - #45 [
INFO  00:53:23,101 - #20 i
INFO  00:53:23,101 - #46 ]
INFO  00:53:23,102 - #42 )
INFO  00:53:23,102 - #39 ;
INFO  00:53:23,102 - #20 i
INFO  00:53:23,102 - #28 ++
INFO  00:53:23,102 - #39 ;
INFO  00:53:23,102 - #21 9
INFO  00:53:23,102 - #27 /
INFO  00:53:23,103 - #21 13
INFO  00:53:23,103 - #44 }
INFO  00:53:23,103 - #11 while
INFO  00:53:23,103 - #41 (
INFO  00:53:23,103 - #20 i
INFO  00:53:23,104 - #21 5
INFO  00:53:23,104 - #42 )
INFO  00:53:23,104 - #39 ;
INFO  00:53:23,104 - #2 print
INFO  00:53:23,104 - #41 (
INFO  00:53:23,104 - #20 c
INFO  00:53:23,104 - #20 getValue
INFO  00:53:23,104 - #41 (
INFO  00:53:23,104 - #20 c
INFO  00:53:23,104 - #20 theA
INFO  00:53:23,105 - #20 x
INFO  00:53:23,105 - #45 [
INFO  00:53:23,105 - #21 0
INFO  00:53:23,105 - #46 ]
INFO  00:53:23,105 - #42 )
INFO  00:53:23,105 - #42 )
INFO  00:53:23,106 - #39 ;
INFO  00:53:23,106 - #20 c
INFO  00:53:23,106 - #20 m
INFO  00:53:23,106 - #41 (
INFO  00:53:23,106 - #42 )
INFO  00:53:23,106 - #39 ;
INFO  00:53:23,106 - #44 }
INFO  00:53:23,107 - #44 }
